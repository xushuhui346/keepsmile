{"meta":{"title":"不忘初心","subtitle":"","description":"这是我的个人博客，记录我生活的每一个角落。","author":"不忘初心","url":"https://xushuhui346.github.io","root":"/keepsmile/"},"pages":[{"title":"文章分类","date":"2015-01-15T16:47:56.000Z","updated":"2020-01-19T03:30:19.264Z","comments":true,"path":"categories/index.html","permalink":"https://xushuhui346.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-01-15T16:51:06.000Z","updated":"2020-01-19T03:30:19.264Z","comments":true,"path":"tags/index.html","permalink":"https://xushuhui346.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"投资理财/股票初级/2019-12-04","slug":"投资理财/股票初级/2019-12-04","date":"2020-01-19T03:30:19.224Z","updated":"2020-01-19T03:30:19.224Z","comments":true,"path":"2020/01/19/投资理财/股票初级/2019-12-04/","link":"","permalink":"https://xushuhui346.github.io/2020/01/19/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7/2019-12-04/","excerpt":"","text":"之前我们学习了分析一家上市公司的方法，以及掌握了选出好公司的发则。现在我们来学习一个技巧，那就是搭配自己的投资组合。#1.白马组合构建白马组合，首先我们来温习一下，白马股的概念。白马股是具有较高投资价值的股票，这类股票长期业绩优秀，长期投资回报高，信息公开透明，发展面临的风险较低。白马股的股价一直持续稳健的增长，确定性非常强，一般投资期限越长，投资者可以获得更多的利润。因此，遇到好股票狂跌的情况下，只会有一种遗憾，那就是没有更多的钱买入这只股票。找到最好的公司，做时间的朋友，这是对股票投资最好的诠释。还是那句话，在中国做一个股票投资者其实是幸运的，因为在人口红利，政策红利，产业红利多期叠加的快速发展中，好企业可以不断的成长、壮大，投资者可以通过持有这些公司的股份，获得源源不断的投资利润。#2.过度集中作为普通投资者，持有多少只股票比较合适？#3.过度分散另一个极端，就是投资过度分散。很多炒股的朋友非常花心，很多人会买十几只股票，甚至20-30只股票，行业不同，风格各异，让人眼花缭乱。持有股票的只数不能太多是股票投资的重要纪律之一。但大多数散户却往往忽视这条记录，特别是新股民，贪多求快，只要是认为好的股票，或者听到专家和朋友推荐的股票，都想买入。结果，顾此失彼，使资金的使用效率大大降低。分散持股，对于大资金投资（比如300万以上）是一种可行的方法，却不适合小资金，如果持有股票只数过多，会对自己的投资造成很大的负面影响。 第一个缺点，是分散了资金。 第二个缺点，是分散了精力。那应该买多少只股票比较合适呢？我建议，选择3个不同的行业，一共持有3-5只股票，就可以了。另外，当我们的投资组合一旦形成，除非特殊情况，否则尽量不要去调整。我建议大家炒股不用每天盯盘，这样对你的心态影响会比较大，容易造成你心中的焦虑，还会诱导你做出误判的决策。#4.补充与扩展通常来讲，我们通过阅读公司年报的“公司业务概要”章节就能基本了解公司的商 业逻辑，回答“ 公司干什么的；有什么产品或服务，这些卖给谁；有哪些同行”但是也有 一些公司的”公司业务概要“章节写得比较简单，这时候你若看得不过瘾，那么再往后翻一 个章节，就会看到”经营情况讨论与分析“小节。这节中也会有关于公司业务的描述，比” 公司业务概要“的内容更为详细，所以，我们也鼓励大家如果在”公司业务概要“章节找不 到答案，可以去”经营情况讨论与分析“小节寻找答案。上市公司通常都有官网。通过公司官网来了解公司业务也是很有效的方法。比如，有些 公司会把自己的服务体系，销售体系等内容列在官网中。如果你选择的公司恰巧是消费类公司，那官方商城也是个好去处啊！比如，你上伊利的 某宝官方旗舰店，那对它正在销售哪些产品，甚至对它现在正在热销哪类产品就非常清楚了 班班很喜欢百度和看官网，可以看到财报没有的东西，彼此是互补的哦 前几天我们都是围绕茅台，介绍了资产负债表等等概念 。今天，我们依旧通过茅台来 给大家讲解商业逻辑。 和大家聊一聊国酒茅台的商业逻辑。 说到茅台，我们前期扒了他的资产表，利润表，见识了惊人的毛利率~那他的商业逻辑 是怎样的呢？只是生产和销售茅台吗？我们一起来看。要分析一家公司的商业逻辑， 贵州茅台是干什么的？ 贵州茅台的产品怎么卖？卖给谁？ 贵州茅台有同行吗？有哪些同行？ 贵州茅台 2018 年的年报相信大家都下载了吧？没有的话请直接去巨潮资讯网下 载一份贵州茅台 2018 年的最新年报。翻到第 7 页，也就是第三节“公司业务概要”部分， 让我们一起来寻找下这部分内容有没有关于贵州茅台商业逻辑的答案。","categories":[],"tags":[]},{"title":"基金9-养老目标基金攻略","slug":"投资理财/基金投资/基金9-养老目标基金攻略","date":"2019-12-09T00:00:00.000Z","updated":"2020-01-19T03:30:19.224Z","comments":true,"path":"2019/12/09/投资理财/基金投资/基金9-养老目标基金攻略/","link":"","permalink":"https://xushuhui346.github.io/2019/12/09/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%919-%E5%85%BB%E8%80%81%E7%9B%AE%E6%A0%87%E5%9F%BA%E9%87%91%E6%94%BB%E7%95%A5/","excerpt":"","text":"什么是养老目标基金？养老目标基金，顾名思义是指以追求养老资产的长期稳健增值为目的的基金。养老目标基金本质上是基金中的基金。与普通基金直接投资于股票、债券不同，这个基金专门投资于“一篮子”的基金。这样做的目的是优化资产配置，减小投资风险。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"股票初级9-短线、中线、长线投资","slug":"投资理财/股票初级/股票初级9-短线、中线、长线投资","date":"2019-12-09T00:00:00.000Z","updated":"2020-01-19T03:30:19.240Z","comments":true,"path":"2019/12/09/投资理财/股票初级/股票初级9-短线、中线、长线投资/","link":"","permalink":"https://xushuhui346.github.io/2019/12/09/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A79-%E7%9F%AD%E7%BA%BF%E3%80%81%E4%B8%AD%E7%BA%BF%E3%80%81%E9%95%BF%E7%BA%BF%E6%8A%95%E8%B5%84/","excerpt":"","text":"进入股市，开始实战前，我们要问下自己，到底做短线、中线还是长线。不同的方式，所面临的机会和风险也不相同。 1.短线短线通常指的是持股周期在一个月以内的交易，有的时候甚至短到只有3-5天。做短线的投资者，都是期望在短短的几天，抓住一只股票暴涨的机会，抓住涨停板。这种投资者，一般只想赚取短期差价的收益，通常不去关心股票基本面的情况。短线交易有一个优势，就是可以回避股票价格大幅下跌的风险。但是短线的缺点也很明显。 第一，股票短线波动的随机性很大，上下起伏会受大盘、个股、政策信息环境的影响。很难预测方向，每次做对短线的概率很小，靠运气的成分很大。 第二，短线操作往往会错失牛股长期上涨带来的巨大收益。 第三，短线交易是频繁的，而投资者必须缴纳手续费，交易次数多，就是一笔大的成本。 第四，对投资者的时间和精力要求极高，需要花费大量的时间盯盘。 除此之外，短线操作也很容易上当。那有什么办法可以避免被割韭菜呢？主要3个方式： 第一，选大盘股更安全。 第二，不要轻信股评人士和分析师的话。 第三，炒股要看准再做，宁可错过不能做错，千万不能有赌的心态，否则很难在股市生存。 2.中线中线通常是指持股周期在几个月以内的交易，投资者一般是想赚取股票中企波段的收益。由于持股的时间周期比短线长，中线投资者需要在投资前就要对股票的基本面做一番了解和分析，从而对上市公司一段时间内的表现怀有信心，并选择认为股票价格较合适的时机再买入，静待股价的上涨，博取中期的收益。 3.长线长线是指持股周期至少在1年以上的交易，长的话甚至可以达到5年10年。投资者做长线一般是看好某一个国家或者某个上市公司的前景，希望通过时间的积累来分享这种发展所带来的成果。许多价值投资者都是做长线的，当他们对某只股票的未来发展前景看好时，就不会在乎股票短时间的涨跌和波动。长线的优势是操作省事，买好就放着，不必天天操心，只要选的个股处在行业的上升周期里，长线持有的成功率是最高的，只要股票选的好，赚的远超过短线。在股市中流行这样一句话：“长线是金，短线是银”。从这句话可以看出，在股市交易中，长线投资获利大于短线投资。当然，这并不意味着随便买个股票长期放着不动就能获利。长期投资需要注重投资行业的未来发展潜力和公司的发展潜力，更看重投资人的眼光，而非运气。在之前，我们学习过了选择行业和选择公司的方法，这就是针对长线投资的黄金法则。除了选对股票，在股票的投资过程中，我们还需要坚定忍受相关个股股价短期波动、阶段性下跌带来的回撤、不要短期买卖，克服小白经常犯的毛病。我们一定要相信，股票投资是选择做时间的朋友，只要我们选择了一家可以做生意可以赚钱的好公司，它早晚都会为你带来丰厚的收益的。投资就是用时间和生命来换财富炒股是反人性的事。什么是人性？追涨杀跌，频繁操作，情绪化，想赚快钱，就是人性。如果你跟随你的人性去操作，肯定会亏。我们买一只股票的时候，一定要想好买入它的理由以及它会升值的理由。如果这都没想清楚，那就太遗憾了。另外，大家一定不要短线操作，短线操作就是赌运气，只有长线，才是看能力。 4.补充与扩展今天我们就要化身 CEO，走上人生巅峰假设你有了一笔启动资金，打算创业搞事情。那你准备做什么生意呢？你发现大家吃穿不愁，愿意满足嘴巴外的享受，周末看看话剧陶冶情操、出门旅游领略 山河美好、吃一顿海底捞体验贵宾的享受。假设自己是个文艺妹子（虽然实际上不是），能插花会养花，想要住在像庄园一样的花 园里。虽然你生活的也有花店，但都是卖开业时用的那种花篮、除了红飘带的字不一样，其他 都一样；情人节的定制花束也像也跟从菜市场称斤出来的西蓝花没什么区别你打开慧眼发现了商机，于是开了一家花店，打败不懂花的妖艳 jian 货，自己成为最 妖艳的那个盘算了一下资产，你打算一次性投入 20 万元开家花店。结合过去所学，这 20 万元会影响三表中的哪些表呢？这 20 万影响了现金流量表和资产负债表 解释一下，这 20 万是现金，那现金流量表筹资活动那儿就会增加 20 万现金，这是 20 万对现金流量表的影响。而是你自己掏钱开的店，属于股东的出资部分，所以所有者权益就多了 20 万。股东自 己的钱就是所有者权益。开店第一件事，大家准备做什么呢？很多人说要说租店面、买花苗，错啦！第一件事肯定是先起个好听的店名，没想到吧？名字起得好才能让别人一眼记住你的花店对不对？那叫什么呢？花儿朵朵？蝶恋花？嗯，卖开业花篮的就叫这些你考察了附近镇的花店，还研究了大家的喜好，名字长短的传播度，最后郑重地、抓阄 决定叫“七里香”好，名字起好了，之后再做什么？之后就要选个好地址、买各种花苗，准备正式经营啦那选在哪儿呢？有的地址选得好，买花都要排队叫号，而有的花店却开成了老板的私人 花园，无人问津。为了不让自己的花店变成私人花园，挑来选去，你找到个绝佳的位置，左边是商场，右 边不远处是一个学校，前面过一个红路灯就是医院，后边是居民小区。这不就是传说中的风水宝地吗？果断租啊，租金也不贵，一个月 5000 元，一年的话，乘以 12 个月，一共花费了 5000*12=60000 元。这 60000 元大家知道属于利润表的什么费用吗？没错，属于利润表的管理费用，前面的课程也讲过，公司租用场地的费用是管理费用。那这 6 万元除了作为管理费用影响利润表之外，还影响三表中的哪些表格呢？除了利润表之外，还会影响资产负债表和现金流量表。付租金肯定是要付现金的，那肯定影响现金流量表；现金付给别人了，资产负债表中的货币资金肯定会减少，这就影响了资产负债表因为利润表是资产负债表所有者权益部分的详细记录，影响利润表，肯定会影响资产负 债表的所有者权益部分。所以业务二同时影响三张报表接下来再干啥呢？买设备招人，大干一场啊！你风风火火地进了好些品种的花苗，玫瑰、芍药应有尽有，花了 5 万块，只有客户想 不到，没有客户买不到！结果，第一个月并没有多少客户。大部分花最后变成了干瘪的残花，他们吐着最后一口气 跟你说：一个月能卖多少花你 心里没点数吗？买花的 5 万块影响了哪些表呢？影响了现金流量表和资产负债表。因为没卖出去，所以并没有利润表这是第三个业务，买花肯定是用现金的～所以现金流量表中要减去 5 万块。那花属于花店的原材料，对不对？我们花了 5 万元的现金，买了价值 5 万元的原材料， 原材料就是存货嘛。这项业务的本质就是货币资金减少了 5 万元，存货增加了 5 万元，影 响了资产负债债表。我们看看这个业务的表格。后来为了让更多的人享受到娇嫩的花朵，你加大了广告投入，也开始经营起朋友圈和微 店，线上线下 O2O，洋气啊！皇天不负有心人！经过几个月的推广，花店的生意终于慢慢走上了正轨，客户越来越多！你把成本 5 万 的花全部卖了出去，赚了 15 万块，终于赚到钱了！首先是利润表，花店可是赚了 15 万块！营业收入要增加 15 万！还有吗？ 还有成本呀！买花苗用的 5 万就是成本。然后是现金流量表，卖花肯定是一手交钱一手交货，概不赊账啊，这 15 万块收到的都 是现金，现金增多了，必然影响现金流量表。最后说资产负债表，这个业务对资产负债表的影响稍微复杂一些，花卖出去之后，作为 存货的花苗必然减少，那存货变成了什么呢？变成了货币资金呀，货币资金增加了 15 万， 存货减少了 5 万，会计恒等式左边的总资产部分一共增加了 10 万元，恒等式的右边，所有 者权益也增加了 10 万，因为利润表增加了 10 万嘛，利润表又是所有者权益里利润部分的 详细记录。我们看看第四项业务对三表的影响情况分享内容都是帮助大家了解简单业务对三表的影响，只有这样你才能更加深刻理解数据 的来龙去脉，更不容易被造假的数据所欺骗","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"股票","slug":"股票","permalink":"https://xushuhui346.github.io/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"股票初级8-识别现金流的深度","slug":"投资理财/股票初级/股票初级8-识别现金流的深度","date":"2019-12-08T00:00:00.000Z","updated":"2020-01-19T03:30:19.240Z","comments":true,"path":"2019/12/08/投资理财/股票初级/股票初级8-识别现金流的深度/","link":"","permalink":"https://xushuhui346.github.io/2019/12/08/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A78-%E8%AF%86%E5%88%AB%E7%8E%B0%E9%87%91%E6%B5%81%E7%9A%84%E6%B7%B1%E5%BA%A6/","excerpt":"","text":"前面两节，我们分别学习了财报中的利润表和资产负债表，这节课，我们来学习最后一份表叫现金流量表。 1.现金流量表现金流量表，是记录一家公司现金流入、流出的表格，是反映公司“血液循环”的一张检验报告。我们可以了解企业从哪里取得现金，又将现金用于哪些方面。在商业领域有一个极其重要的观点那就是Cash is King，现金为王。我们自己其实都有过亲身体会。很多人都有过坐公交忘带零钱的经历，即便支付宝微信里有钱，还绑着好几张银行卡，但却无法化解那一块钱硬币的燃眉之急。在企业管理中，这种“一分钱难倒英雄汉”的情况时有发生。虽然公司有成百上千万的资产，价值庞大的合同，还有客户的很多欠条。但是公司账上一旦没有了足够周转的资金，连下个月员工的工资和房租都付不起，这就是大麻烦。餐馆的例子和培训机构的例子告诉我们：作为企业管理者或者投资者，单看一家公司账面上的利润是不够的，我们还要看企业在经营过程中，产生和使用现金的情况，帮助我们进一步的判断公司的利润质量和偿付到期债务的能力。对于一个公司，现金流的重要性如同人体中流动的血液一样，人体没有充足新鲜的血液流动，最终只能出现休克或死亡，而一个创业公司或大企业也会如此。所以，做企业的人都会认为，现金流，其实比企业的盈利和亏损都更重要。根据美国银行的一项研究发现，82%的公司经营失败可以归因于现金管理不当。很多时候，一个公司的资产很大，但是现金少，也会遭遇破产的风险。 2.经营、投资、筹资三大活动下面，我们通过贵州茅台的例子，看一下上市公司现金流量表的结构。现金流量表一共分为三大块，分别是经营活动、投资活动以及筹资活动。 经营活动是企业日常的与流动资产各个项目有关的活动，比较常见的有客户支付的货款、购买原材料、向供应商支付的现金、支付给职工的现金等。经营活动现金流量是最重要的现金流量，因为它是从主营业务产生的现金流入和流出，代表着企业的造血能力。负数的经营活动现金流是很难长久支出企业的生存的，更别说发展了。通常而言，白马股的经营活动现金流都是非常稳定增长的，不会出现暴涨暴跌的情况。而中小型公司，现金流的不可预测性极强，大幅增加了投资者准确预测的难度。 投资活动产生的现金流是指企业进行投资活动所发生的现金流入和流出，比如常见的有用现金购买的设备，用现金建的新厂房等，还有股权投资等等。 筹资活动产生的现金流是指企业在募集资金的过程中所发生的现金流入和流出，比较常见的有股票IPO上市获得的现金、向银行贷款获得的资金、向银行偿还的贷款利息等等。 通过上面的介绍，我们已经简单了解了现金流量表的基础构成，说到底现金流量表就是对企业现金收付情况的一个总结。无论是企业对外支出，还是收到一笔钱，都需要明确一下这笔钱到底是由于经营活动引起的，还是投资或筹资活动引起的，这样把钱做一个分类，到了期末再归结起来就是现金流量表。 3.现金流的陷阱每个上市公司都渴望把现金流的数据做的漂亮，然而，很多时候并不能如愿以偿，他们会经常碰到三种陷阱。 第一种情况，应收账款过多。什么叫应收账款？就是你卖了东西，对方给你打了一张白条。企业为了实现销售收入，过分满足客户需求，客户不断赊欠，或者延长付款期限来交换订单。导致企业中大量现金被客户占用，现金流出现问题。 第二种情况，库存太多企业生产库存是花账上的钱的，比如原材料，工人工资等。这个很好理解，比如小米公司，手机或者其他科技产品发布之前需要备很多货，如果卖不出去，或者卖的太慢，就会导致现金的回款太慢，一旦衔接不上，资金链断了，小米就可能发不出工资了。更坏的情况是，生产的库存太多，卖不出去，那这些电子产品存货的价值可能就是废品的价格了。 第三种情况，固定资产投入过大。主要是重资产行业，比如航空业，想要把收入做大，必须要不断地扩充飞机数量，新飞机到手之前，就要砸下几十亿的预付款，一旦扩张过快，就会导致资金周转困难。 4.如何增强现金流 第一，把握好扩张的节奏不要一味的盯着收入，而要重视收入可以转化成的现金。你付钱给你的供应商，你的员工和你从客户那里收回钱的时间差是不小的问题。在经济下行周期，企业生存压力都大，应收账款风险大。缩短赊账的期限是王道，尽可能的把现金支出推后，同时尽最大努力鼓励客户尽快支付。 第二，支持预订货，降低库存。库存有生产成本及储存成本，一旦卖不出去，要么过期要么过时，极大的侵占了资金效率。所以，更科学的方式是按需生产。 第三，控制大规模设备投入，学会外包。现在各行各业变化越来越快，很多企业好不容易投入巨资，新生产线刚建好，新的技术又出现了，下游需求可能也变了，导致公司一直在投入巨资追赶。而学会使用外包，可以让我们避免一次性大投入，增强企业对外界环境的应变能力。把握现金支出和收入增长之间的平衡考验着公司管理层的能力，这也是为什么总在强调，做投资要选择优秀的公司。因为历史已经证明他们善于管理以及经营，有做大做强公司的实力，而中小型公司，面对困难和解决困难的能力还有待验证。 5.补充与拓展有一天，某富翁走过地下通道的时候，碰到一名乞丐。看到乞丐衣衫单薄的样子，富翁 一下动了侧隐之心，想要给乞丐送一些温暖，于是就掏出 1 枚金币准备递给他，但递钱的 时候发现身上的现金只剩下了这枚金币了。“把钱给乞丐的话，我的午饭怎么解决呢?”富翁手里拿着金币犹豫了。 乞丐呢，他看到富翁递过来 1 枚金币时心里一阵狂喜，但随后他又看到富翁把钱收了 回去。正当乞丐疑惑的时候，富翁脱下了自己的大衣，递给乞丐说：“衣服给你吧，值 100 枚金币呢。”富翁以为乞丐会很激动得接过大衣，但乞丐并没有。乞丐盯着他的钱包说：“尊贵的大 人，您还是给我那枚金币吧”好，故事讲完了，乞丐为什么不要价值 100 枚金币的衣服而只要 1 枚金币呢？小伙伴们可以想一想。因为衣服不能直接花，名贵衣服虽然价值 100 枚金币，但对于乞丐来说当下没什么用， 他拿去卖的话，没准会被当成小偷抓起来。但 1 枚金币却可以让乞丐得到很多他需要的东 西，所以对乞丐来说，一枚金币的现金比价值 100 枚金币的衣服更有诱惑力。同样的道理，对一个企业来说，现金是企业赖以生存的血液，如果没有了血液，人就会 死，企业没有了现金，那很可能就要破产啦！还记得上次给小花介绍的对象铁蛋同学吗？今天大家可以化身丈母娘，一起 来考验下铁蛋同学的现金流。小花的男朋友叫做黄埔铁蛋，是个程序猿话说，程序猿这个职业可真是好哇 你猜黄埔铁蛋每月的工资收入有多少？ 月薪 2 万哦，对于在二线城市生活的他们来说，这个收入可谓是很不错啦。而且 黄埔铁蛋的生活比较简单，支出很少。网传程序猿的真实写照是这样子滴：一款游戏一包烟，一台电脑一下午。一盒泡面一壶水，一顿能管一整天。黄埔铁蛋虽 然木有这么惨，也算得上绝佳好男人啦，不抽香烟不喝酒，每天只花十块五。除此之外，黄埔铁蛋非常上进，在业余时间加入文豪理财，学习了理财课程 后，每月会拿出 5000 元来定投。你是不是想问剩下的钱呢？剩下的钱中黄埔铁 蛋会拿出 1 万 2 千元分红给小花。那么黄埔铁蛋每月会剩多少钱呢？根据上面的信息，我们试着编制铁蛋的现金流量表啦 ，根据班班发的 Excel 表格来填写吧，5 分钟之后我们来公布答案哦，我们只做一个月的数据哈首先，月薪 2 万，这是铁蛋的经营活动现金流入。每天十块五，一个月的生活支出=10.5*30=315 元，这是黄埔铁蛋经营活动的现金流出情况。黄埔铁蛋同时在进行理财投资，每月都定投基金 5000 元，这笔支出可是一 项投资哦，计入投资活动的现金流出里。每个月给小花分红12000 元，可见铁蛋很疼女朋友，这样的男朋友请给我来一打好嘛（哦，不，一个就够了）。这里12000记在筹资活动现金流出里。我们最后再算算铁蛋还剩多少钱呢？现金及现金等价物净增加额=经营活动现金流净额+投资活动现金流净额+ 筹资活动现金流净额=19685-5000-12000=2685元。OK，好的，填完黄埔铁蛋的现金流量表之后，我们来分析一下他的现金流肖像！从表中我们知道，2018年1月铁蛋的经营活动现金流净额是19685 元，投资活动现金流净额是-5000元，筹资活动现金流净额是-12000 元。这三大活动相加的净额=19685+（-5000）+（-12000）=2685 元。由此可见，铁蛋经营正常，真正赚到了现金，经营活动现金流净额足以覆盖投资活动和筹资活动的现金流流出，是典型的奶牛型好男人，就是吃的是草，挤 出来的是奶。哇哦赚到","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"股票","slug":"股票","permalink":"https://xushuhui346.github.io/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"基金8-基金亏了，怎么办？","slug":"投资理财/基金投资/基金8-基金亏了，怎么办？","date":"2019-12-08T00:00:00.000Z","updated":"2020-01-19T03:30:19.224Z","comments":true,"path":"2019/12/08/投资理财/基金投资/基金8-基金亏了，怎么办？/","link":"","permalink":"https://xushuhui346.github.io/2019/12/08/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%918-%E5%9F%BA%E9%87%91%E4%BA%8F%E4%BA%86%EF%BC%8C%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/","excerpt":"","text":"上一节，讲到了止盈。止盈是一个幸福的烦恼，这节我们则会面对一个痛苦的烦恼，那就是亏损。基金亏了，怎么办？ 1.第一种情况，自身原因 首先第一步，是找原因。基金亏损不可怕，可怕的是不知道亏损的原因一般来说，亏损主要分三种情况：一个是自身原因，一个是外部原因，一个是时间原因。自身原因，指的是，这只基金本身就是有问题的，是一直坏基金。如何判断是否买了坏基金？非常简单，就是看它的历史收益表现。这个案例很生动的告诉大家，买基金，一定不能随便买，因为它的质量直接决定了投资者会赚钱还是亏钱。其实避免踩雷差基金的最佳方式是： 在刚开始买入的时候就要多加筛选，用4433法则筛选，不要轻易的听从小道消息或者理财经理的推荐，随便买卖。 2.第二种情况，外部原因外部原因涉及到整体的市场行情，如果整体市场行情都不好的，单独一只基金也很难独善其身。 通过数据复盘分析，我们可以发现两个惊人的相似点。 只要是在3000点下方发行的新基金，当大盘回到3000点之后，无论之前探底的幅度大还是小，时间长还是短，都能获得正收益，而且评价收益率都很高。 只要是3000点下方开始定投，当大盘回到3000点之后，都能获得正收益。所以说，只要你买的产品对，买的价格低，就不用怕。 如果是因为市场大环境不好，好基金出现了亏损，我们可以怎么办？ 第一，确定你买的基金是好基金。亏损只是因为市场大环境不好，而不是本身的质量不好。 第二，放心以及耐心的持仓。 第三，大盘跌到低位的时候，坚持定投。一旦上证指数跌到3000点以下，还可以加仓。好的补仓机会是跌出来的，可以大程度降低你的持有成本。 第四，等待大盘涨回来。 3.第三种情况，时间原因除了自身原因和外部原因，时间因素也和亏损有着很大的联系。时间因素可以细分为两个方向： 第一个方向，是买在了高位。如果我们不小心高位买进了，亏损了，怎么办？很简单，还是老方法，坚持在低位的时候定投，摊低我们的持有成本。这种方法看似简单，其实很有效。 除了买在高位，基金持有时间也会影响投资收益。 想要基金盈利，长期持有是一个必须项。如果投资者不能克服随便操作的习惯，特别是短期买卖的习惯，亏损的概率会非常大。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"股票初级7-基本面分析（2）识别资产的质量","slug":"投资理财/股票初级/股票初级7-基本面分析（2）识别资产的质量","date":"2019-12-07T00:00:00.000Z","updated":"2020-01-19T03:30:19.236Z","comments":true,"path":"2019/12/07/投资理财/股票初级/股票初级7-基本面分析（2）识别资产的质量/","link":"","permalink":"https://xushuhui346.github.io/2019/12/07/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A77-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E5%88%86%E6%9E%90%EF%BC%882%EF%BC%89%E8%AF%86%E5%88%AB%E8%B5%84%E4%BA%A7%E7%9A%84%E8%B4%A8%E9%87%8F/","excerpt":"","text":"上一节，我们学习了如何看一个上市公司的利润表，利润表可以告诉我们，企业在一段时间内，是亏损了还是盈利了，以及收入和支出分别是多少。这节课，我们学习，如何看一个上市公司的资产负债表。 1.资产负债表资产负债表，是企业财务情况的总表。它分为三大块，分别是资产、负债以及所有者权益。 第一块是资产指的是一个公司有多少钱和物可以支配，可以分为流动资产和非流动资产。流动资产就是公司缺钱了，很快就能卖出去换来钱，例如库存；非流动资产就是想卖也很难卖出去至少一年内实现不了，例如厂房、土地等。 第二块是负债指的是欠别人的早晚要归还的债务，可以分为流动负债和非流动负债。流动负债是一年内到期要偿还的，比如短期内就要给的货款，要还的银行贷款等；非流动负债是指偿还期在一年以上的，例如从银行借的五年后到期的借款。 第三块是所有者权益指的是资产扣除负债后，股东应享有的剩余权益。 资产负债表有个永恒的公式，那就是资产必须等于=负债+所有者权益。 首先我们来看资产部分。值得注意的是，贵州茅台是一家典型的轻资产公司。为什么这么说呢？如果细心一点，我们可以发现，贵州茅台的资产总计1598亿，而货币资金就占1121亿，是第一大资产，占比70%。什么是货币资金？大家简单地理解成银行存款就可以了。贵州茅台的账面上躺了1000多个亿的现金，是一家不缺钱的公司。贵州茅台的第二大资产是存货，存货就是茅台酒的成品与半成品，这也是轻资产。 接着我们来看负债部分和所有者权益部分。负债一样分为流动性负债和非流动性负债。贵州茅台的流动性负债包括了应付给供应商的货款，应发给销售渠道的货物，应付给员工的工福利，应缴纳的税费等等，这些都是非常常见的负债。我们看这个表格，可以发现贵州茅台的预收款项这个类目非常大，价值125.8亿，占总负债的32%。预收账款的意思是，提前收了客户的钱，但是还没发货。预收账款并不是实质意义上的负债，因为它并不需要归还，只需要向经销商发货即可。预收账款也反映了企业在产业链的地位，预收账款越多，体现了企业在产业链的强势，产品供不应求，下游经销商愿意提前支付货款以确保得到茅台酒产品，这体现了茅台在产业链的绝对优势地位。还有一点指的关注的是，贵州茅台并没有什么非流动性负债，这很好理解，我们通过资产部分，知道了茅台有1000多个亿现金躺在银行账户，自身造血功能强，当然就没有必要去外部借钱了。 我们作为投资者，要警惕负债很高，借款很多的公司，因为这种公司面临的财务压力极大，甚至有资不抵债，破产重组的风险。看完了负债，我们再来看所有者权益。这一块很直接明了，我们直接看股东权益合计，就知道茅台股东享有的权益是多少了。资产负债表示财报阅读的难点，如果把上述概念搞清楚了，已经算是半个财报的行家了。 2.ROE看完资产负债表，我们如何进一步分析它呢？证券的分析方式，是通过两个重要的比率。 第一个比率，是ROE也就是净资产收益率。用以反映公司运用自有资本的效率，这是非常非常重要的一个指标。净资产收益率= 净利润/净资产（所有者权益），比率越高，说明公司赚钱的能力越强，你可能会有疑问，什么是净资产？其实很简单，净资产等于资产减去负债。例如，你买了一辆车，总价值50万，自己首付30万，贷款20万，净资产就等于50-20=30万。大家发现了吗?两种不同的情况，在利润不变的情况下，当小名的自由资金少，他的ROE净资产收益率就会变高，当小明投入的自由资金变多，他的ROE就会变低。所以说，这个指标，考察的是公司利用自由资金的效率。你可能有疑问，借的钱多，不就意味着风险变大了吗，而且借钱也有成本呀？这里我们要清晰一点，那就是公司的净利润，是已经扣除借款利息的。 3.ROA第二个比率，ROA。也就是资产收益率或者资产回报率。用以反映公司运用所有资产的效率，也是衡量公司盈利的重要指标，资产收益率= 净利润/总资产。比率越高，说明企业资产的利用效率越高。大家发现了吗？两种不同的情况，在利润不变的情况下，当餐厅的总资产少，他的ROA资产收益率就会变高，当餐厅的总投资额多，他的ROA就会变低。所以说，这个指标，考察的是公司利用总资产的效率。ROE和ROA不同之处在于，一个是净资产的回报水平，一个是总资产的回报水平。我们作为投资者，找到一家公司的ROE和ROA后，应该拿它们和公司的历史水平以及同行业的竞争者做对比。数值越高，说明该企业的盈利能力越强。 4.补充与拓展资产负债表是不是只有上市公司才能用呢？长长的报表跟看起来超牛逼的上市公司才配？我们来做个相亲角的红娘入门考试题，准备好纸笔或者 Excel 表格哦。今年年初，你的任务是帮客户小花找对象，然后安排相亲。小花想找一个有家第的人， 如果人品都不错就可以考虑谈婚论外貌嫁了。你知道男客户全蛋比较匹配，但是“身家殷实”这一项还拿不准，得确定全蛋是不是有 殷实的家底 。所以现在需要你根据资料库里 2017 年全蛋的基础资料，来帮小花判断一下 哦。以上仅供教学参考，不构成现实交友观点。基础资料：“全蛋，年龄 30 岁，有房有车，开了家家具店。房子呢，三室一厅，已经 贷款付清，价值 120 万。车是 SUV，价值 100 万，全款购买，但是问亲戚借了 30 万，约 定 3-5 年内还清，目前还没还过。银行卡里有 20000 元。余额宝里 12000 元。今年全蛋的 朋友铁柱来全蛋店里定了套价值 50000 的家具，说是过段时间给钱，到现在也没给。全蛋 有个亲戚开了个运动器材店，12 月的时候，全蛋在亲戚那里买了一台 6000 元跑步机，也 还没给亲戚钱。好，接下来班班带着大家一起梳理下全蛋的身家。 1、全蛋的货币资金有多少？货币资金 32000 元，包括银行卡中的 20000 元和余额宝中的 12000 元。 2、全蛋的应收账款是多少？应收账款 50000 元，是铁柱拿了家具没给全蛋的钱。 3、全蛋的固定资产是多少？固定资产 220 万 6 千元，包括全蛋的房子 120 万，车子 100 万，别忘了，还有他买的 跑步机 6000 元。 4、全蛋的应付账款是多少？应付账款 6000 元，是拿了亲戚的跑步机还没给亲戚的钱。 5、全蛋的长期借款是多少钱？长期借款 30 万，是全蛋买车跟亲戚借的钱。我们把全蛋的资产负债情况填进资产负债表里：怎么样，你们觉得是不是可以把全蛋介绍给客户小花？全蛋身家过百万，而且流动资产高于流动负债，说明全蛋有不错的还债能力，而且手 头还有现金，跟着他会有肉吃。可以撮合两位见面！好了，相亲角红娘的故事告一段落，我们回归主题。经过这个题目以后，大家觉得资 产负债表难不难？是不是看着高大上的资产负债表也没那么空中楼阁？ 大到企业、小到家庭都可以有。其实， 三表只是一个工具，大家不用怕","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"股票","slug":"股票","permalink":"https://xushuhui346.github.io/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"基金7-止盈大法：守住利润，聪明的卖","slug":"投资理财/基金投资/基金7-止盈大法：守住利润，聪明的卖","date":"2019-12-07T00:00:00.000Z","updated":"2020-01-19T03:30:19.220Z","comments":true,"path":"2019/12/07/投资理财/基金投资/基金7-止盈大法：守住利润，聪明的卖/","link":"","permalink":"https://xushuhui346.github.io/2019/12/07/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%917-%E6%AD%A2%E7%9B%88%E5%A4%A7%E6%B3%95%EF%BC%9A%E5%AE%88%E4%BD%8F%E5%88%A9%E6%B6%A6%EF%BC%8C%E8%81%AA%E6%98%8E%E7%9A%84%E5%8D%96/","excerpt":"","text":"低买高卖，是投资的真理。今天我们学习如何卖基金，也就是止盈。止盈的方法主要针对股票基金、指数基金、混合基金。因为这几种类型的基金都和股市挂钩，涨跌的幅度较大。 1.目标止盈法止盈的方法主要有三种。第一种方法，目标止盈法。这种操作方法最简单，最容易操作。 第一步，在投资开始的时候，就设置一个止盈点。比如30%，当然这个设置并不是真的手动设置，而是在自己的脑海里、心里、或者笔记本上记录下。 第二步，一旦持仓收益达到这个止盈点，资金就立即撤出。这个时候，你可能有疑问，这个止盈点可以设置成多少呢？这其实取决于你的风险爱好程度。 我们具体可以按照上证指数的市盈率来设置止盈点： 1.当上证市盈率大于25时，止盈点设为10%； 2.上证市盈率在20-25之间时，止盈点设为20%； 3.上证市盈率在15-20之间时，止盈点设为30%； 4.上证市盈率小于15时，止盈点设为50%； 2.动态止盈法第二种方法，动态止盈法其实，与其说是第二种方法，不如说是对第一种方法的升级版。在牛市中，我们大部分人的基金定投在达到止盈点之后，仍然还会保持着不错的涨势。比如说，你设置了30%的止盈点，但是这是基金可能在几个月内又涨到40%，甚至50%的潜力，这个时候，大家往往就会担心止盈会错过后面的增长。 那么，我们就可以采用动态止盈法，止盈点并不是固定的，而是随市场行情的变化而变化的，具体操作方法是这样的：先设置一个止盈点，比如30%，等到基金达到止盈点后，先不止盈，而是提高止盈点，比如说从30%提到40%，再达到，就再提高。如果一直涨下去就一直持有，但是途中只要回撤幅度达到5%，立即止盈。这种止盈方法最灵活，也最不会错过大涨。 3.估值止盈法第三种止盈方法，估值止盈法估值止盈法是我们投资指数基金可以参考的一个标准。这个方法是根据市盈率等指标来判断指数基金目前的市场价格，相对于历史数据，它到底是高估了还是低估了。如果目前市场价相较于历史，处于低位，说明可以继续持有。而如果目前的市场价相较于历史，处于高位，则可以考虑止盈。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"股票初级6-基本面分析（1）识别利润的增长","slug":"投资理财/股票初级/股票初级6-基本面分析（1）识别利润的增长","date":"2019-12-06T00:00:00.000Z","updated":"2020-01-19T03:30:19.228Z","comments":true,"path":"2019/12/06/投资理财/股票初级/股票初级6-基本面分析（1）识别利润的增长/","link":"","permalink":"https://xushuhui346.github.io/2019/12/06/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A76-%E5%9F%BA%E6%9C%AC%E9%9D%A2%E5%88%86%E6%9E%90%EF%BC%881%EF%BC%89%E8%AF%86%E5%88%AB%E5%88%A9%E6%B6%A6%E7%9A%84%E5%A2%9E%E9%95%BF/","excerpt":"","text":"前面我们比较宏观的谈了择股、择行业的逻辑。今天开始，我们会更微观的去讲解一些分析公司的方法。 1.利润表我们谈到过，最深度了解一家上市公司的方式，是研读这家公司的财报。一份财报，通常来说会有三张报表，分别是资产负债表，利润表和现金流量表。资产负债表反映了企业的财务状况，利润表反映了企业的经营结果，现金流量表反映了企业的现金流量。今天我们的重点是介绍利润表，因为投资者对于一个公司最关注的莫过于是否盈利，获利多少，亏损多少？而利润表可以直接反映这些数据。我们可以在东方财富网-贵州茅台的财务分析页面直接找到一份缩减版的利润表，把主要的数据都整理罗列出来了。这个途径比我们从一份正规的财报中去找数字更加方便清晰，我也推荐大家直接用东方财富网的这个功能。这里，大家一定要分辨出三个重要的概念，一是营业收入，一个是毛利，一个是净利。 首先，我们来讲营业收入。营业收入又被称作销售收入，顾名思义，指的是公司在一段时间内，销售商品或者提供服务得到的收入，是反映企业经营发展状况的核心指标。 其次，我们来讲毛利。毛利=营业收入-营业成本。这里的成本指的是，从购买原材料到实现销售之前为产品所发生的成本。大家可能还经常听到一个概念，叫做毛利率，毛利率指的是毛利润除以营业收入。用鞋厂的例子继续说明的话，它的毛利率就是400/1000=40%。一家公司的毛利率越高，反映公司的技术水平、产品竞争力越强。净利润指的是企业的营业收入，减去成本和费用后，公司所剩的利润。费用由管理费用，市场销售费用，财务费用等等。净利润多，企业的整体经营效益就好；净利润低，企业的整体经营效益就差，净利润是衡量一个企业经营效益的主要指标，重要性高于毛利润。一份利润表的结构，看起来杂七杂八的收入和支出项很多，作为投资者，绝大多数情况下，我们主要关注营业收入、毛利、净利就可以了。 2.历史对比我们找到了利润表并且知道了它的结构，我们该如何分析它呢？正确的分析方法，并不是看冷冰冰的乏味的数字，而是看两个对比。 第一个对比，历史对比：通过过往几个季度和年份的历史数据对比，我们可以知道公司经营效率是不是正在改善还是在恶化。回到财报，我们同样还是用贵州茅台的利润表来作分析。 首先是营业收入。我们A股市场，能够保持营业收入持续增长的公司非常少，越是大公司，保持规模的增长困难度越大，贵州茅台能够在近几年维持两位数的增速，就像是一只大象在奔跑。 大家要注意，如果一家上市公司的营业收入增长是负数，业绩大滑坡，就要谨慎了，这说明公司经营出现了大问题。 看完了营业收入，我们再来看毛利率。 再看净利率。 3.同业对比我们除了要把公司的现在和历史表现做比较。我们还要做同业对比，也就是通过拿它与同行业的公司做对比，这样做，方便我们找出它的优势、薄弱环节和提升空间。茅台与同行业五粮液、洋河股份对比： 4.补充与拓展毛利率=（营业收入-营业成本）/营业收入=(736.39-65.23)/736.39=91.14%毛利率高达近 91%，也就是成本只占了收入的 9%，我滴天，毛利这么高，我们买了茅台喝的究竟是什么呀！净利率=净利润/营业收入=378.3/736.4=51.37%净利率高达 51% 说明他的盈利能力很好。毛利率=（营业收入-营业成本）/营业收入=(400.3-104.87)/400.3=73.8%净利率=净利润/营业收入=140.40/400.3=35.07%，盈利能力也远没有茅台好，和茅台比 无法抗衡。根据图中的数据分析飞天茅台：营业收入：（出厂价）817元毛利：（营业收入-原材料成本）817-39 = 778元毛利率：（毛利/营业收入）778/817 =95.2%净利润：（营业收入-原材料成本-其他费用）817-39-38-63-78 =599元净利率：（净利润/营业收入）599/817=73.3%","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"股票","slug":"股票","permalink":"https://xushuhui346.github.io/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"基金6-基金定投，傻傻的买最能赚","slug":"投资理财/基金投资/基金6-基金定投，傻傻的买最能赚","date":"2019-12-06T00:00:00.000Z","updated":"2020-01-19T03:30:19.220Z","comments":true,"path":"2019/12/06/投资理财/基金投资/基金6-基金定投，傻傻的买最能赚/","link":"","permalink":"https://xushuhui346.github.io/2019/12/06/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%916-%E5%9F%BA%E9%87%91%E5%AE%9A%E6%8A%95%EF%BC%8C%E5%82%BB%E5%82%BB%E7%9A%84%E4%B9%B0%E6%9C%80%E8%83%BD%E8%B5%9A/","excerpt":"","text":"前面我们提到，长期来看，指数基金是收益风险比最完美的选择。但是这并不意味着，只要是指数基金，随便怎么买都行。今天，我们就来讲讲，投资指数基金最重要的一个技巧，叫做定投。只要你学会了用这种方法买指数基金，拉长时间轴看，肯定不会亏本，肯定能赚钱。 1.什么是基金定投？基金定投的概念很简单，就是在固定的日期，以固定金额，投资一个固定的产品。它有三要素： 固定的时间 固定的金额 固定的产品 定投指数基金有3大优势： 第一个优势是摊低成本 第二个优势是抵抗干扰 第三个优势是强制储蓄 2.定投的技巧 首先，时间是关键一般定投的周期都比较长，最少1年，多则3-5年，这样才能抚平短期的波动，获得好收益。 基金定投一定要避免频繁买卖交易 定投的第二个技巧，就是要把握好定投频率，每月一次就好。研究数据显示，不论1年期，3年期，5年期还是10年期的投资长度，每月定投的收益率都要高于其他的频率。那么对于普通的工薪阶层，我的建议是把发工资的第二天设置为扣款日。既能避免冲动消费，又能强制储蓄。听起来很简单，其实在投资市场，成功就是：复杂的事情简单做，简单的事情重复做。 3.定投的适合人群哪些人不适合定投指数基金呢？ 厌恶风险的人：更适合理财产品和债券基金。 想短期打理资金的人：指数基金的特点是以时间换空间，如果时间给的不够充裕，那么风险就大。 期待暴富的人：指数基金定投的特点是长期受益稳，不会有暴涨暴跌的可能。相反，指数基金定投最适合哪些人？ 工薪族：每月都会有一笔固定的收入来源，所以可以留出一小笔的钱来定投。 月光族：基金定投有很好的强制储蓄作用，可以无形中帮你存下一笔钱。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"股票初级5--“坏公司”排雷法：剔除绩差股","slug":"投资理财/股票初级/股票初级5--“坏公司”排雷法：剔除绩差股","date":"2019-12-05T00:00:00.000Z","updated":"2020-01-19T03:30:19.224Z","comments":true,"path":"2019/12/05/投资理财/股票初级/股票初级5--“坏公司”排雷法：剔除绩差股/","link":"","permalink":"https://xushuhui346.github.io/2019/12/05/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A7/%E8%82%A1%E7%A5%A8%E5%88%9D%E7%BA%A75--%E2%80%9C%E5%9D%8F%E5%85%AC%E5%8F%B8%E2%80%9D%E6%8E%92%E9%9B%B7%E6%B3%95%EF%BC%9A%E5%89%94%E9%99%A4%E7%BB%A9%E5%B7%AE%E8%82%A1/","excerpt":"","text":"这节课，我们聊聊如何避开差公司。 1.讲故事炒概念第一个标准，避开讲故事，炒概念的公司。所谓概念炒作是跟价值投资相对立的，这种公司没有可持续的发展模式，没有稳定的收入和利润支撑，仅凭一个或者多个故事来支撑现在的股价。许多上市公司因为自身发展到了瓶颈，或者遇到了经营困难，都会选择讲故事、炒概念、追热点。为什么追热点？因为热点具有话题性，具有人气，很多投资者喜欢这个故事，就会买入这家公司的股票，推动股价的上涨。对投资者来说，应对尽量远离炒概念的企业。因为这些企业，自己已经放弃了将自己的主营业务做大做强。那如何避开这种公司呢？如果一个公司经常转型，一阵子要进军这个行业，一阵子说要进军那个行业，同时经营两个以上互不相干的业务，财报上有莫名其妙的收益或亏损，则不考虑。 2.团队丑闻缠身第二个标准就是避开创始人丑闻多的公司。我们上节课谈过，筛选好公司，一个很重要的条件就是拥有稳定的管理团队。一个好公司的老板，他势必是本行业的长期耕耘者，且有一个稳定和分工明确的管理层，即使遇到困难，也会逢凶化吉。而一个坏公司的老板，则是因为某种偶然性的因素进入到这个行业，比如投资、并购，自己本身并不擅长这个领域，并且他的管理层经常换人，一个差团队，往往可以毁了一个好公司。总的而言，老板是一家公司的灵魂人物，如果灵魂人物本身经验少，品行差，我们就不应该选择当他的股东，因为他不值得信赖。 3.业绩遭遇暴跌第三个标准，就是避开业绩遭遇暴跌的公司。一家上市公司，通常拥有较稳定的业务模式和收入来源，不可能每年经营状况变化非常大。如果业绩出现暴涨暴跌，一般有两种原因 第一种原因，是业绩造假。 第二种原因，是遇到不可控的风险。 如何避开这种公司？我们可以用一个笨方法，那就是设置一个准入门槛，如果一家上市公司过去的3年没有持续盈利，则完全不考虑。一家好公司，盈利应该是呈稳步上升的状态。这就是三种最常见的辨别坏公司的方法。小白投资者应当时刻保持冷静的头脑，坚持价值投资的理念来投资中国股票市场，拒绝投机心理，克服自身的贪婪与恐惧，才能在故事当中避免踩雷现象的发生。 4.补充与扩展：如果把股市视为雷区，那这个世界上首屈一指的扫雷之神就是股神巴菲特了。其实巴菲特的 “扫雷技巧”很直观，一针见血，他奉行的扫雷技巧就是他的选股方式，从源头杜绝踩雷的 可能性。 第一条规则是，公司高层须保持警觉的领导能力 公司内部的一切都是从最高层开始的，至上而下映射至公司的每个层次和每个职位。找到一 家公司和组织的合适领导者投资者来说至关重要。需要关注公司的高层比如首席执行官和董事会主席，看看他们的薪水，是否合理控制公司的 债务情况，以及他们过去的决定，这能让我们认知到公司的风险有多大。 辨别一家公司高层的薪水是否合理方法：让大家去看高管薪酬，目的不是真的去关心公司给高管们的待遇呀，高管们挣多少钱和我们 普通股东没啥关系。但是，有些公司就是奉行再苦不能苦领导的政策，甭管底下人怎样勒紧 裤带过日子，高管们依然该赚赚该花花。比如，公司年利润 1000 万，高管薪酬 800 万。如果投资公司这种公司，中小股东能吃上 肉吗？肯定是不能，估计连汤都没得喝！这就要我们从财报中看公司高管们的酬来决定我们 普通股东是吃肉还是喝汤。高管薪酬一般出现在年报的《董事、监事、高级管理人员和员工 情况》一节里。你也可以以”薪酬“或者”高级管理人员“为关键词搜索找到相关内容。 前几个月曝出的新城控股董事长猥琐女童，大家都有关注吗？新城控股当天的股份从 42.69 一路跌到 38.42，所以一家公司的高层领导一言一行都是会影响票价的，都值得被关注的。 第二条规则：投资有长期前景的公司该公司是否能够在未来 30 年内持续销售他们的产品。 第三条规则：股票应该是稳定并易理解的就是说公司的经营逻辑能被理解，就是清楚公司是卖什么的，对他的产品是用什么生产的及 原材料找谁买。公司的业务范围是什么，怎么盈利。第四条规则：投资于内在价值具有吸引力的股票预测公司的内在价值——未来的价值。如果他能以低于内在价值的价格持有这个公司的股 票，他就会考虑投资。 昨天讲了白马股，今天来讲讲反面教材”老千股“赌场里作弊，出老千，大家都有所了解吧。但在股市里也有老千股。就是他们不好好经营公 司，却以欺诈坑骗普通投资者的钱为已任，中饱私囊。尤其在香港市场，那里比中国内地的 A 股监管更宽松，规则更灵活。香港简直成了老千股的滋生地。老千股之于股市，就相当于在相亲市场诈骗，表面看起来是个好人，但实际人品恶劣，妥妥 的渣男。就如一个正常的男孩子大学毕业后，在某外企就职，是一枚妥妥的白领阶层。按正 常轨道来说是好好工作，努力打拼事业，成家立业，生活平淡却富足的一生。谁知天有不测 风云，外企濒临倒闭，就失去工作了。在尝试找新工作的过程中，又屡屡碰壁，感觉人生丧 丧的，再加上平时没有节流意识，兜里很快就没有余粮啦。要想生活下去怎么办呢？除了一 身好看的皮囊是哪哪都比脸干净啦，于是借助相亲诈骗。还别说，在相亲市场还是很吃香的。 遇到了上市外企漂亮女子，漂亮有能力积蓄又不少，心思却单纯的可怜。正中了男孩心思呀。 于是男孩以职业发展需要学习培训等理由向女子借款，小则几千，大则上万。一个月下来就 捞到了几百万的资金。一步走错，步步错，从此过上了即使不工作也能照样吃香喝辣的生活，简直美滋滋。一路不 回头啦。然后就这样骗完一个又一个，都没有兴趣找工作上班啦。但是他借钱的借口还从来没有被拆穿过，也是牛呀。其实老千股和上面的男孩性质是一样的，公司前期也是有主营业务的，后来由于某些原因导致业务进行不下去，资金链断裂等为契机 需要外借集资，就走向上不归路。他们打着“为了扩张业务”等口号，发行股票集资。但是 有了钱后并没有真正的去干正经事，而是偷偷的挪到自己使用。就这样公司大股东们一次就 可以赚几个亿或几十个亿，超级轻松不费力。遇到这种股票股价可不是跌 20%或是 30%就可以的。会一路跌到 90%都不止的哈。 这样的公司就像男孩一样尝到甜头绝对会再一再二再三的，不要想着回心转意，那是不存在 的。老千股的特征： 1）大股东持股比例很低，在 30%以下，就是说公司大部分不是他们的，他们可以使劲的造 呀； 2）股价奇低，1 块钱，几毛钱，甚至是几分钱的； 3）常年不分红骗你钱的小白脸，是不可能会把自己的钱掏出来给你花的。这是一个很简单，又很好用的指 标。连续多年（5 年以上）高分红（分红率大于 40%）的股票，不大可能是老千股。 纵然老千股可怕，但是掌握了一定的知识能够看穿他的花招，避免入坑，也就是变相保护了自己哈。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"股票","slug":"股票","permalink":"https://xushuhui346.github.io/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"基金5-基金怎么挑？3招就搞定","slug":"投资理财/基金投资/基金5-基金怎么挑？3招就搞定","date":"2019-12-05T00:00:00.000Z","updated":"2020-01-19T03:30:19.216Z","comments":true,"path":"2019/12/05/投资理财/基金投资/基金5-基金怎么挑？3招就搞定/","link":"","permalink":"https://xushuhui346.github.io/2019/12/05/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%915-%E5%9F%BA%E9%87%91%E6%80%8E%E4%B9%88%E6%8C%91%EF%BC%9F3%E6%8B%9B%E5%B0%B1%E6%90%9E%E5%AE%9A/","excerpt":"","text":"要想买基金赚钱，有两个非常重要的要素，一是选对基金，一是选对时机 1.选对基金：4433法则之前提到了几个筛选基金的小方法，一个是成立时间，一个是基金规模，一个是历史业绩。成立时间三年为基准，时间越长越好；基金资产规模在5亿以上为基准，太小的有赎回风险；历史业绩在同类排名中为优秀，越稳定越好。成立时间和基金规模都非常直观、好理解。那么历史业绩可以怎么判断呢？答案很简单，就是4433法则。所谓“4433法则”，就是以“时间”来检验一只基金收益绩效的方法。这个方法也常常被专业投资人士用来作为评判基金收益和表现的核心指标。4433法则怎么用？具体是这样看的。 首先，看中长期指标。第一个“4”代表选择一年期内，收益表现排名在同类型产品前1/4的基金；第二个“4”代表选择两年以及三年以来收益表现排名在同类型产品前1/4的基金。 其次，看短期指标。第一个“3”代表选择近6个月内，收益表现排名在同类型产品中前1/3的基金；第二个“3”代表选择近3个月内收益表现排名在同类型产品前1/3的基金。 下面我们登陆好买基金网实操一下。大家要记住，我们不要执着于一定要去选排名第一、第二的基金。其实，一旦上了这个榜单，成绩都十分优秀，我们再简单的配合看一看成立时间和基金规模，就可以完成筛选了。 2.选对时机：上证指数选对时机，有两个可以参考的标准。 第一个是上证指数。什么是上证指数？上证指数又称上证综指，或者沪指，是上海证券综合指数的简称。自1991年7月15日起正式发布。这个股票指数的样本是所有在上海证券交易所上市的股票。这个指数，有很强的市场代表性，可以反映我们中国股票市场的趋势以及涨跌幅度。我们常常在财经新闻里看到的大盘指数，一般指的就是上证指数。当上证指数低于3000点的时候，要果断加倍的买基金。当上证指数大于3000点，小于4000点的时候，可以放心的买，因为这个区间也是历史的相对低点，比较安全。 当上证指数大于4000点的时候，就要开始谨慎、小心了。 3.选对时机：市盈率什么是市盈率？通俗的说，就是一个公司经营多少年，才能赚回投入的本金。市盈率是我们作为投资者，必须理解掌握的一个重要财务指标，特别是涉及股票的课程里，会经常看到这个概念。一般情况下，一只股票的市盈率越低，说明回本周期越短，投资风险越小，投资价值越大。上证市盈率指的是上海证券交易所，所有上市公司的总股价/总利润得出来的比率。当上证市盈率小于15的时候，相对安全，我们投资者可以放心的多买股票基金。当上证市盈率介于15-20之间时，要谨慎些买，因为估值稍稍有些偏高。而当上证市盈率大于20的时候，风险就更大了，下跌的空间要大于上涨的空间，建议可以停止买入股票基金。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"基金4-指数基金，安心+收益，巴菲特的唯一推荐","slug":"投资理财/基金投资/基金4-指数基金，安心+收益，巴菲特的唯一推荐","date":"2019-12-04T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2019/12/04/投资理财/基金投资/基金4-指数基金，安心+收益，巴菲特的唯一推荐/","link":"","permalink":"https://xushuhui346.github.io/2019/12/04/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%914-%E6%8C%87%E6%95%B0%E5%9F%BA%E9%87%91%EF%BC%8C%E5%AE%89%E5%BF%83+%E6%94%B6%E7%9B%8A%EF%BC%8C%E5%B7%B4%E8%8F%B2%E7%89%B9%E7%9A%84%E5%94%AF%E4%B8%80%E6%8E%A8%E8%8D%90/","excerpt":"","text":"基金种类这么多，感觉有些复杂，有没有一种适合所有人投资的基金，兼顾安全性和收益性？答案是：指数基金巴菲特曾经多次建议：通过定期投资指数基金，一个什么都不懂的业余投资者，都能战胜大部分投资专家。 1.什么是指数基金？指数基金，其实属于股票基金的一个分类，是一种特殊的股票基金。我们知道了指数基金是股票基金的一个特殊类别，那么普通的股票基金和指数基金的差别在哪呢？简单的说，普通的股票基金是主动管理型基金，而指数基金是被动管理型基金。 所谓主动管理型基金，就是基金经理把资金投资于他所偏爱的股票，债券等，有很大的自主权，所以是一种主动的投资方式，目的是为了获取超越市场平均的收益。 被动型投资，也就是指数基金，基金经理是没办法根据自己的想法去决定买什么股票的。他所做的，就是看他跟踪的指数中有哪些股票，他就主要买哪些股票，试图复制指数的表现，只用把钱按比例投入到相应的股票即可。在整个过程中，他的目标是要获取市场的平均收益，而不是超额收益。所以，被动型基金的业绩和基金经理的关系不大，他基本不用动脑，就是个执行者。 2.三个优点 长生不老这里的长生不老，是针对单只股票来说的，大家都知道，一家公司的寿命其实是有限的，打个比方，曾经如日中天的诺基亚，摩托罗拉等公司，如今也日落西山了。所以从长远来看，几乎所有的公司都有面临到一个衰落期。所以说，公司的兴旺期以及寿命是有限的。然而，指数基金则非常灵活，能够纳入新公司，淘汰旧公司，有新陈代谢的能力。所以，投资指数基金比投资一个公司的股票要安全非常大。 长期上涨巴菲特提到过，买指数基金就是买国运，只要相信国家能继续发展，指数基金就能长期上涨，我们就能分享国家经济增长的收益。 成本低这里的成本，是针对基金本身的运作成本。每只基金运作的时候，每年都会收取基金管理费和托管费。主动型基金一般会收取基金规模的1.5%作为管理费。而被动型，也就是指数基金，一般的管理费都在0.5%左右，前者比后者要高大概一个百分点的手续费。对于我们长期投资者来说，能省下一些费用，就是赚到了。 3.指数基金的主要种类指数基金分类很多，有宽基指数基金，有行业指数基金。两者的区别在于，是否通吃各行各业。 宽基类就是在选股票时，不限制投资的行业，它涵盖了各行各业，比如很多同学听过的上证50、沪深300、创业板指数等等。 行业指数基金的样本股只来源于一个行业，比如军工指数、银行指数、消费指数、医药指数等等。这两者的特点是，宽基指数基金覆盖的行业更多更广，分配的更均匀，受某个行业的影响小，盈利更稳定。行业指数基金则是投资一个特定的行业，受行业影响较大，投资风险高一些。下面介绍最具代表性的三种指数基金 第一种指数基金，上证50上证50指数是从上交所挑选规模最大，流动性最好、最具代表性的50只股票组成的样本股，综合反映最具影响力的一批优质大盘企业的整体状况。 第二种指数基金，沪深300沪深300指数挑选的是上交所和深交所规模最大、流动性最好的300只股票，也都是以大公司为主，占到国内股市全部规模的60%以上，所以沪深300也被认为国内股市最具代表性的指数。 第三种指数基金，中证500中证500是由提出沪深300指数里涵盖的股票以及总市值排名前300名的股票后，总市值排名靠前的500只股票组成。反映的是一批中小市值公司的股票价格表现。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"基金3-基金那么多，要收益，选哪只？","slug":"投资理财/基金投资/基金3-基金那么多，要收益，选哪只？","date":"2019-12-03T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2019/12/03/投资理财/基金投资/基金3-基金那么多，要收益，选哪只？/","link":"","permalink":"https://xushuhui346.github.io/2019/12/03/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%913-%E5%9F%BA%E9%87%91%E9%82%A3%E4%B9%88%E5%A4%9A%EF%BC%8C%E8%A6%81%E6%94%B6%E7%9B%8A%EF%BC%8C%E9%80%89%E5%93%AA%E5%8F%AA%EF%BC%9F/","excerpt":"","text":"如果大家想追寻更高一些的收益，我们就需要配置一些稍高风险的资产，比如股票基金。 1.什么是股票基金？股票基金，就是主要投资股票的基金。买股票基金，相当于让基金经理帮我们炒股。股票基金，风险大，波动大，收益也最高。 2.盈利三要素 选对基金打铁还需自身硬，选对基金当然很重要。我们一定要掌握选好基金的方法论，才不会踏入陷阱。 熊市进场，牛市出场基金的买卖点很关键。作为投资者，要低买高卖。所以，当股票市场在低谷的时候，往往是我们买入基金的最好时机。“别人恐惧我贪婪”是股票基金投资的重要制胜法宝。 长期持有因为股票型基金非系统性风险较低，所以能否长期持有成为决定投资成败的关键因素。短期波动是无法预测及避免的，但是，只要选择了一只好的基金，并且买在了相对的低位，就不要在意短期内的波动，因为历史规律决定了，交易市场，有熊市，有牛市，在熊市买入，牛市卖出，低买高卖，是最简单、朴实、有效的投资方式。 长线指的是多久呢？一般都是指至少2年以上。 3.3-5只基金组合投资股票基金，我们通常需要做一个投资组合。目的很简单，就是为了分散风险。那么一个好的投资组合，多少只基金比较合适呢？答案是3-5只就可以了。要记住，最好不要选择同一行业的基金，因为这样风险不够分散。什么叫同行业的基金呢？比如，全是投资科技主题的股票基金，或是全是投资消费主题的股票基金。分散行业投资，可以多点开花，总有一类产品会涨，不会踏空热点。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"基金2-基金那么多，要安心，选哪只？","slug":"投资理财/基金投资/基金2-基金那么多，要安心，选哪只？","date":"2019-12-02T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2019/12/02/投资理财/基金投资/基金2-基金那么多，要安心，选哪只？/","link":"","permalink":"https://xushuhui346.github.io/2019/12/02/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%912-%E5%9F%BA%E9%87%91%E9%82%A3%E4%B9%88%E5%A4%9A%EF%BC%8C%E8%A6%81%E5%AE%89%E5%BF%83%EF%BC%8C%E9%80%89%E5%93%AA%E5%8F%AA%EF%BC%9F/","excerpt":"","text":"今天，我们一起学习债券基金。 1.什么是债券基金？债券是政府、银行企业等机构缺钱了，为了筹集资金，依照法律规定，向外部发行的借款凭证。类似朋友之间借钱时打的欠条。根据发型机构的不同，债券又可以细分为政府债、金融债、企业债等等。为什么国家、金融机构、或者大企业需要发债呢？两个原因：第一种原因最常见，就是这些机构缺钱了，所以需要向外部借钱。第二种原因，是当市场上钱多了，借钱的成本很低的时候，不借白不借。 2.债券基金的作用 第一个作用：是1-2年的中短期资金的打理。 第二个作用：是资产配置的重要一环。我们不能把所有的资金都放到一个篮子里，做投资，要荤素搭配，债券基金因为自身的波动比较小，为我们的资产可以起好的保值和防御作用。还要提一点，债券基金的走势，很多时候跟指数基金和股票基金是负相关的。负相关，意味着大多数时候两者的走势是相反的。也就是说，指数基金或股票基金上涨的时候，通常是债券基金下跌的时候；指数基金或股票基金下跌的时候，通常是债券基金上涨的时候。合理搭配，平滑风险。 3.案例分析那么哪些人适合购买A类债券基金，又有哪些人适合B类、C类呢？ 资金很多的朋友比较适合购买A类债券基金。 如果你钱不多，而且持有时间不确定的话，C类债券基金比较适合你（既没有申购费，也没有赎回费）。 我们在筛选债券基金的时候，主要观察三个指标： 成立时间：三年为基准，时间越长越好。 基金规模： 5亿以上为基准，太小的有赎回的风险。 历史业绩：在同类排名中为优秀，越稳定越好。 其实，债券基金因为风险小，波动小，投资相对简单，做一下简单的筛选，就可以高枕无忧了。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"基金1-轻松投资，躺着也能赚钱","slug":"投资理财/基金投资/基金1-轻松投资，躺着也能赚钱","date":"2019-12-01T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2019/12/01/投资理财/基金投资/基金1-轻松投资，躺着也能赚钱/","link":"","permalink":"https://xushuhui346.github.io/2019/12/01/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/%E5%9F%BA%E9%87%911-%E8%BD%BB%E6%9D%BE%E6%8A%95%E8%B5%84%EF%BC%8C%E8%BA%BA%E7%9D%80%E4%B9%9F%E8%83%BD%E8%B5%9A%E9%92%B1/","excerpt":"","text":"很多人都在找一个相对安全稳妥，而且收益不错的理财方法。其实，这个答案很简单，那就是基金理财。 1.什么是基金？基金投资其实很容易理解，就是普通人把自己手里的钱，交给专业的人去投资。 优势1：专业性强。 优势2：流动性强。基金可以随时买卖，通常在2-3日内就可以赎回现金，有很好的变现性和流动性。同时，基金交易的手续非常简便，门槛也很低，交易金额通常在100元以上就可以。（支付宝蚂蚁财富1元就可以） 优势3：风险分散性强。 2.基金的类型按照投资对象的不同，我们可以将基金分为4类，分别是：货币基金、债券基金、股票基金和混合基金。 货币基金：风险最小的基金，比如支付宝里的余额宝，这类基金安全性很高，基本没什么风险。 债券基金：风险比货币基金稍大一些。分为政府债、金融债、企业债等。 股票基金：主要投资于股票市场的基金，是高风险的投资品种。 指数基金属于股票基金的一类。指数是一个选股规则，它的目的是按照某个规则挑选出一篮子股票，并反映这一篮子股票的平均价格走势。 混合基金：既可以投资股票，也可以投资债券和货币市场。风险要低于股票基金。 3.基金工具 首选好买基金网在好买基金网上，最常用的功能有两个：一是基金排名，而是基金详情页面 其他：支付宝蚂蚁财富、 微信财付通、 天天基金网。","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"基金","slug":"基金","permalink":"https://xushuhui346.github.io/tags/%E5%9F%BA%E9%87%91/"}]},{"title":"资产分配","slug":"投资理财/资产分配","date":"2019-12-01T00:00:00.000Z","updated":"2020-01-19T03:30:19.244Z","comments":true,"path":"2019/12/01/投资理财/资产分配/","link":"","permalink":"https://xushuhui346.github.io/2019/12/01/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E8%B5%84%E4%BA%A7%E5%88%86%E9%85%8D/","excerpt":"","text":"一、三种类型的投资者1.进行风险评估。2.投资者可以分为激进型、稳健型和保守型三类。 保守型投资者，适合在一些更安全的品种上投资，比如：银行理财、货币基金、债券基金、保险基金，预期年收益在4-6%左右。 稳健型投资者，比保守型投资者更能承担些小风险，来换取高一些的回报。投资配置的主要产品为：银行理财、债券基金、指数基金，预期年收益一般在7-10%左右。 激进型投资者，可以忍受更多的风险，去换取更大的收益回报。投资配置的主要产品为：银行理财、债券基金、股票基金、股票等。目标年收益一般在10-20%左右。 风险永远和收益成正比。 二、核心+卫星资产配置法1.什么是资产配置把钱分配到不同的地方，让它们发挥不同的作用，就是资产配置。 2.核心+卫星资产配置法 核心资产：就是能给投资者带来稳定收益的资产，这部分资产一般以稳定收益的低风险资产为主。比如银行理财 卫星资产：就是指能给投资者带来超额收益的部分，卫星资产包含高风险资产、中风险资产和低风险资产3个部分。a.高风险的产品有股票基金、股票等。b.中风险资产有债券基金、信托等。c.低风险资产有银行理财产品等。 3.具体操作方法首先，我们先根据年龄将投资者分为3个阶段：青年（35岁以下）、中年（35-60岁）、老年（60岁以上）根据这三个年龄段将核心资产和卫星资产的配置比例划分为：青年（核心资产20%-30%，卫星资产70%-80%）中年（核心资产30%-50%，卫星资产50%-70%）老年（核心资产50%-70%，卫星资产30%-50%）通过核心+卫星的资产配置方法，既可以保证投资者的核心资产稳定，又可以博取较高的收益。当然，资产配置是个极其个性化的事，这个资产配置法可以作为一个大纲，大家可以按自己的实际情况和偏好做一些小幅的调整。 三、贪婪是亏损的元凶理财骗局层出不穷，我们要采取相应的解决方法： 1.对高收益（年收益大于30%）的投资产品本能要提出疑问，为什么会有如此高收益？ 2.百度搜索相关的词条，查找是否曾经有曝光的负面新闻。 3.找值得信任的专业人士咨询。 在借贷市场，回报率高，代表着资产质量差谨防上当，保护好自己的本金","categories":[{"name":"投资理财","slug":"投资理财","permalink":"https://xushuhui346.github.io/categories/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/"}],"tags":[{"name":"投资","slug":"投资","permalink":"https://xushuhui346.github.io/tags/%E6%8A%95%E8%B5%84/"},{"name":"理财","slug":"理财","permalink":"https://xushuhui346.github.io/tags/%E7%90%86%E8%B4%A2/"},{"name":"资产分配","slug":"资产分配","permalink":"https://xushuhui346.github.io/tags/%E8%B5%84%E4%BA%A7%E5%88%86%E9%85%8D/"}]},{"title":"Cache-control使用Cache-control-private学习笔记","slug":"前端/http/Cache-control使用Cache-control-private学习笔记","date":"2019-08-12T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2019/08/12/前端/http/Cache-control使用Cache-control-private学习笔记/","link":"","permalink":"https://xushuhui346.github.io/2019/08/12/%E5%89%8D%E7%AB%AF/http/Cache-control%E4%BD%BF%E7%94%A8Cache-control-private%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"网页缓存由 HTTP消息头中的Cache-control控制，常见取值有private、no-cache、max-age、must- revalidate等，默认为private 其作用根据不同的重新浏览方式，分为以下几种情况： （1）打开新窗口值为private、no-cache、must-revalidate，那么打开新窗口访问时都会重新访问服务器。而如果指定了max-age值，那么在此值内的时间里就不会重新访问服务器，例如：Cache-control: max-age=5(表示当访问此网页后的5秒内再次访问不会去服务器) （2）在地址栏回车值为private或must-revalidate则只有第一次访问时会访问服务器，以后就不再访问。值为no-cache，那么每次都会访问。值为max-age，则在过期之前不会重复访问。 （3）按后退按扭值为private、must-revalidate、max-age，则不会重访问，值为no-cache，则每次都重复访问 （4）按刷新按扭无论为何值，都会重复访问Cache-control值为“no-cache”时，访问此页面不会在Internet临时文章夹留下页面备份。另外，通过指定“Expires”值也会影响到缓存。例如，指定Expires值为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问： Expires: Fri, 31 Dec 1999 16:00:00 GMT比如：禁止页面在IE中缓存http响应消息头部设置： Code1CacheControl &#x3D; no-cache2Pragma&#x3D;no-cache3Expires &#x3D; -1 Expires是个好东东，如果服务器上的网页经常变化，就把它设置为-1，表示立即过期。如果一个网页每天凌晨1点更新，可以把Expires设置为第二天的凌晨1点。当HTTP1.1服务器指定 CacheControl = no-cache时，浏览器就不会缓存该网页。 旧式 HTTP 1.0 服务器不能使用 Cache-Control 标题。 所以为了向后兼容 HTTP 1.0 服务器，IE使用Pragma:no-cache 标题对 HTTP 提供特殊支持。如果客户端通过安全连接 (https://)/与服务器通讯，且服务器在响应中返回 Pragma:no-cache 标题，则 Internet Explorer不会缓存此响应。注意：Pragma:no-cache 仅当在安全连接中使用时才防止缓存，如果在非安全页中使用，处理方式与 Expires:-1相同，该页将被缓存，但被标记为立即过期。 header常用指令header分为三部分： 第一部分为HTTP协议的版本(HTTP-Version)； 第二部分为状态代码(Status)； 第三部分为原因短语(Reason-Phrase)。Code1&lt;?php2&#x2F;&#x2F; fix 404 pages: 用这个header指令来解决URL重写产生的404 header3header(&#39;HTTP&#x2F;1.1 200 OK&#39;); 45&#x2F;&#x2F; set 404 header: 页面没找到6header(&#39;HTTP&#x2F;1.1 404 Not Found&#39;); 78&#x2F;&#x2F; 页面被永久删除，可以告诉搜索引擎更新它们的urls9&#x2F;&#x2F; set Moved Permanently header (good for redrictions) 10&#x2F;&#x2F; use with location header 11header(&#39;HTTP&#x2F;1.1 301 Moved Permanently&#39;); 12&#x2F;&#x2F; 访问受限13header(&#39;HTTP&#x2F;1.1 403 Forbidden&#39;);14&#x2F;&#x2F; 服务器错误15header(&#39;HTTP&#x2F;1.1 500 Internal Server Error&#39;);1617&#x2F;&#x2F; 重定向到一个新的位置18&#x2F;&#x2F; redirect to a new location: 19header(&#39;Location: http:&#x2F;&#x2F;www.jb51.net); 2021延迟一段时间后重定向22&#x2F;&#x2F; redrict with delay: 23header(&#39;Refresh: 10; url&#x3D;http:&#x2F;&#x2F;www.sina.com.cn&#39;); 24print &#39;You will be redirected in 10 seconds&#39;; 2526&#x2F;&#x2F; 覆盖 X-Powered-By value27&#x2F;&#x2F; override X-Powered-By: PHP: 28header(&#39;X-Powered-By: PHP&#x2F;4.4.0&#39;); 29header(&#39;X-Powered-By: Brain&#x2F;0.6b&#39;); 3031&#x2F;&#x2F; 内容语言 (en &#x3D; English)32&#x2F;&#x2F; content language (en &#x3D; English) 33header(&#39;Content-language: en&#39;); 3435&#x2F;&#x2F;最后修改时间 (在缓存的时候可以用到)36&#x2F;&#x2F; last modified (good for caching) 37$time &#x3D; time() - 60; &#x2F;&#x2F; or filemtime($fn), etc 38header(&#39;Last-Modified: &#39;.gmdate(&#39;D, d M Y H:i:s&#39;, $time).&#39; GMT&#39;); 3940&#x2F;&#x2F; 告诉浏览器要获取的内容还没有更新41&#x2F;&#x2F; header for telling the browser that the content 42&#x2F;&#x2F; did not get changed 43header(&#39;HTTP&#x2F;1.1 304 Not Modified&#39;); 4445&#x2F;&#x2F; 设置内容的长度 (缓存的时候可以用到):46&#x2F;&#x2F; set content length (good for caching): 47header(&#39;Content-Length: 1234&#39;); 4849&#x2F;&#x2F; 用来下载文件:50&#x2F;&#x2F; Headers for an download: 51header(&#39;Content-Type: application&#x2F;octet-stream&#39;); 52header(&#39;Content-Disposition: attachment; filename&#x3D;&quot;example.zip&quot;&#39;); 53header(&#39;Content-Transfer-Encoding: binary&#39;); 5455&#x2F;&#x2F; 禁止缓存当前文档:56&#x2F;&#x2F; load the file to send:readfile(&#39;example.zip&#39;); 57&#x2F;&#x2F; Disable caching of the current document: 58header(&#39;Cache-Control: no-cache, no-store, max-age&#x3D;0, must-revalidate&#39;); 59header(&#39;Expires: Mon, 26 Jul 1997 05:00:00 GMT&#39;); 60&#x2F;&#x2F; 设置内容类型:61&#x2F;&#x2F; Date in the pastheader(&#39;Pragma: no-cache&#39;); 62&#x2F;&#x2F; set content type: 63header(&#39;Content-Type: text&#x2F;html; charset&#x3D;iso-8859-1&#39;); 64header(&#39;Content-Type: text&#x2F;html; charset&#x3D;utf-8&#39;); 65header(&#39;Content-Type: text&#x2F;plain&#39;); 6667&#x2F;&#x2F; plain text file 68header(&#39;Content-Type: image&#x2F;jpeg&#39;); 6970&#x2F;&#x2F; JPG picture 71header(&#39;Content-Type: application&#x2F;zip&#39;); 7273&#x2F;&#x2F; ZIP file 74header(&#39;Content-Type: application&#x2F;pdf&#39;); 7576&#x2F;&#x2F; PDF file 77header(&#39;Content-Type: audio&#x2F;mpeg&#39;); 7879&#x2F;&#x2F; Audio MPEG (MP3,...) file 80header(&#39;Content-Type: application&#x2F;x-shockwave-flash&#39;); 8182&#x2F;&#x2F; 显示登录对话框，可以用来进行HTTP认证83&#x2F;&#x2F; Flash animation&#x2F;&#x2F; show sign in box 84header(&#39;HTTP&#x2F;1.1 401 Unauthorized&#39;); 85header(&#39;WWW-Authenticate: Basic realm&#x3D;&quot;Top Secret&quot;&#39;); 86print &#39;Text that will be displayed if the user hits cancel or &#39;; 87print &#39;enters wrong login data&#39;;88?&gt; 现在表单的填写，我们可以用AJAX对用户随时进行验证，进行友好的提示，但是在用户没有留意AJAX友好提示,提交了错误的表单，跳回原页，而填写的信息却全部丢失了。要支持页面回跳，有以下的办法： 1.使用session_cache_limiter方法： session_cache_limiter(‘private,must-revalidate’);但是要值得注意的是 session_cache_limiter()方法要写在session_start()方法之前才有用;2.用header来设置控制缓存的方法： header(‘Cache-control:private,must-revalidate’);","categories":[{"name":"前端","slug":"前端","permalink":"https://xushuhui346.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://xushuhui346.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"web","slug":"web","permalink":"https://xushuhui346.github.io/tags/web/"},{"name":"http","slug":"http","permalink":"https://xushuhui346.github.io/tags/http/"}]},{"title":"python基础语法","slug":"服务端/python/python基础语法","date":"2019-08-08T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2019/08/08/服务端/python/python基础语法/","link":"","permalink":"https://xushuhui346.github.io/2019/08/08/%E6%9C%8D%E5%8A%A1%E7%AB%AF/python/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","excerpt":"","text":"一、变量和简单数据类型1.字符串方法 字符串大小写：.title()首字母大写.upper()全部大写.lower()全部小写 合并字符串使用+号合并拼接字符串 使用制表符或换行符添加空白\\t 制表符\\n 换行符 删除空白.rstrip() 删除末尾（右侧）空白.lstrip() 删除开头（左侧）空白.strip() 删除两端空白 2.数字 使用函数str()避免类型错误数字需要转为字符串才能和字符串拼接 3.python之禅(命令行 import this) Beautiful is better than ugly.(美胜于丑。) Simple is better than complex.(简单胜于复杂。) Complex is better than complicated.(复杂总比难懂好。) Readability counts.(可读性计数。) There should be one– and preferably only one –obvious way to do it.(应该有一种——最好只有一种——显而易见的方法来做到这一点。) 二、列表简介1.列表是什么就是js的数组，索引从0开始 2.增删改元素 .append() 末尾插入 .insert(索引，值) 在列表指定位置添加新元素 del 列表[索引] 删除元素（可以删除任一元素，但要知道索引） .pop() 删除列表最后一个元素，并将此元素返回 .pop(0) 删除指定索引的元素，并将此元素返回 .remove(元素值) 根据值删除元素注意： 方法remove() 只删除第一个指定的值。如果要删除的值可能在列表中出现多次，就需要使用循环来判断是否删除了所有这样的值。 3.组织列表 使用.sort() 对列表进行永久性排序 .sort(reverse=True) 倒序排序，也是永久性的 .sorted() 对列表临时排序 .reverse() 所有元素按相反顺序排列 .len() 获取列表长度 每当需要访问最后一个列表元素时，都可使用索引-1 。这在任何情况下都行之有效，即便你最后一次访问列表后，其长度发生了变化。仅当列表为空时，这种访问最后一个元素的方式才会导致错误！ 三、操作列表1.遍历整个列表 for in : (遍历的元素代码 需要缩进) 2.避免缩进错误3.创建数值列表 range() 打印一系列数字range(1,4) 只会打印1,2,3 不包含4 list(range(1,4)) ==&gt; [1,2,3] range() 还可以指定步长 list(range(2,11,2)) ==&gt; [2,4,6,8,10] 两个星号（**）表示乘方运算 对数字列表执行简单的统计计算min(数字列表) 取最小值max(数字列表) 取最大值sum(数字列表) 求和 列表解析 4.使用列表的一部分 切片list[0:3] (索引，含前不含后)list[:3] (从头开始)list[2:] (到末尾)list[-3:] (最后3个元素) 复制列表list1 = list[:] (首尾都没写，复制整个列表)list1 = list (关联一个list，两个表改动，都会影响list) 5.元组 不可变的列表称为元组 元组使用圆括号（），不适用方括号[] 直接改变元组中的元素是不可以的，会报错，如dimensions = (100,20) dimensions[0]=50 (会报错) 修改元组的变量不会报错，是合法的，如dimensions = (100,20)dimensions = (400,20) （合法，不报错） 6.设置代码格式 每级缩进都使用四个空格。对你使用的文本编辑器进行设置，使其在你按Tab键时都插入四个空格。 每行都不要超过80字符。对你使用的编辑器进行设置，使其在第80个字符处显示一条垂直参考线。 不要在程序文件中过多地使用空行。 四、if语句1.条件测试 检查是否相等时不考虑大小写在Python中检查是否相等时区分大小写，如果大小写很重要，这种行为有其优点。但如果大小写无关紧要，而只想检查变量的值，可将变量的值转换为小写，再进行比较。Code1&gt;&gt;&gt; car &#x3D; &#39;Audi&#39;2&gt;&gt;&gt; car.lower() &#x3D;&#x3D; &#39;audi&#39;3True 检查是否不相等要检查是否两个人都不小于21岁，可使用下面的测试：使用and 检查多个条件Code1&gt;&gt;&gt; age_0 &#x3D; 222&gt;&gt;&gt; age_1 &#x3D; 18 3&gt;&gt;&gt; age_0 &gt;&#x3D; 21 and age_1 &gt;&#x3D; 214False 5&gt;&gt;&gt; age_1 &#x3D; 226&gt;&gt;&gt; age_0 &gt;&#x3D; 21 and age_1 &gt;&#x3D; 217True 关键字or 也能够让你检查多个条件，但只要至少有一个条件满足，就能通过整个测试。仅当两个测试都没有通过时，使用or 的表达式才为False 要判断特定的值是否已包含在列表中，可使用关键字in 。 确定特定的值未包含在列表中很重要；在这种情况下，可使用关键字not in 。 2.if语句 if语句Code1age &#x3D; 192if age &gt;&#x3D; 18:3 print(&quot;You are old enough to vote!&quot;)4 print(&quot;Have you registered to vote yet?&quot;) if-else语句Code1age &#x3D; 17 2 if age &gt;&#x3D; 18:3 print(&quot;You are old enough to vote!&quot;)4 print(&quot;Have you registered to vote yet?&quot;) 5else:6 print(&quot;Sorry, you are too young to vote.&quot;)7 print(&quot;Please register to vote as soon as you turn 18!&quot;) if-elif-else 结构Code1age &#x3D; 122if age &lt; 4:3 print(&quot;Your admission cost is $0.&quot;) 4elif age &lt; 18:5 print(&quot;Your admission cost is $5.&quot;) 6else:7 print(&quot;Your admission cost is $10.&quot;) 使用多个elif 代码块 省略else 代码块 3.使用if语句处理列表 确定列表不是空的 五、字典1.一个简单的字典Code1alien_0 &#x3D; &#123;&#39;color&#39;: &#39;green&#39;, &#39;points&#39;: 5&#125;2print(alien_0[&#39;color&#39;])3print(alien_0[&#39;points&#39;]) 2.使用字典 键值对 用花括号{} 先创建一个空字典，再添加键值对Code1alien_0 &#x3D; &#123;&#125;2alien_0[&#39;color&#39;] &#x3D; &#39;green&#39;3alien_0[&#39;points&#39;] &#x3D; 54print(alien_0) 修改字典中的值Code1alien_0 &#x3D; &#123;&#39;color&#39;: &#39;green&#39;&#125;2print(&quot;The alien is &quot; + alien_0[&#39;color&#39;] + &quot;.&quot;)3alien_0[&#39;color&#39;] &#x3D; &#39;yellow&#39;4print(&quot;The alien is now &quot; + alien_0[&#39;color&#39;] + &quot;.&quot;) 删除键值对（del）删除的键值对永远消失Code1alien_0 &#x3D; &#123;&#39;color&#39;: &#39;green&#39;, &#39;points&#39;: 5&#125;2print(alien_0)3del alien_0[&#39;points&#39;]4print(alien_0) 3.遍历字典 遍历所有的键值对Code1for name, language in favorite_languages.items(): 遍历所有的键Code1for name in favorite_languages.keys()： 遍历字典时，会默认遍历所有的键，因此，如果将上述代码中的for name in favorite_languages.keys(): 替换为for name in favorite_languages: ，输出将不变。如果显式地使用方法keys() 可让代码更容易理解，你可以选择这样做，但如果你愿意，也可省略它。 按顺序遍历字典中的所有键可使用函数sorted() 来获得按特定顺序排列的键列表的副本：Code1favorite_languages &#x3D; &#123;2 &#39;jen&#39;: &#39;python&#39;,3 &#39;sarah&#39;: &#39;c&#39;,4 &#39;edward&#39;: &#39;ruby&#39;,5 &#39;phil&#39;: &#39;python&#39;,6 &#125;7for name in sorted(favorite_languages.keys()):8 print(name.title() + &quot;, thank you for taking the poll.&quot;) 遍历字典中的所有值使用方法values()Code1for language in favorite_languages.values(): 为剔除重复项，可使用集合（set）。集合 类似于列表，但每个元素都必须是独一无二的Code1favorite_languages &#x3D; &#123;2 &#39;jen&#39;: &#39;python&#39;,3 &#39;sarah&#39;: &#39;c&#39;,4 &#39;edward&#39;: &#39;ruby&#39;,5 &#39;phil&#39;: &#39;python&#39;,6 &#125;7print(&quot;The following languages have been mentioned:&quot;) 8for language in set(favorite_languages.values()):9 print(language.title()) 4.嵌套有时候，需要将一系列字典存储在列表将演示的，嵌套是一项强大的功能。 字典列表Code1alien_0 &#x3D; &#123;&#39;color&#39;: &#39;green&#39;, &#39;points&#39;: 5&#125;2alien_1 &#x3D; &#123;&#39;color&#39;: &#39;yellow&#39;, &#39;points&#39;: 10&#125;3alien_2 &#x3D; &#123;&#39;color&#39;: &#39;red&#39;, &#39;points&#39;: 15&#125;4aliens &#x3D; [alien_0, alien_1, alien_2]5for alien in aliens:6 print(alien) 在字典中存储列表Code1pizza &#x3D; &#123;2 &#39;crust&#39;: &#39;thick&#39;,3 &#39;toppings&#39;: [&#39;mushrooms&#39;, &#39;extra cheese&#39;],4 &#125; 在字典中存储字典可在字典中嵌套字典，但这样做时，代码可能很快复杂起来。 六、用户输入和while循环1.使用int() 来获取数值输入Code1&gt;&gt;&gt; age &#x3D; input(&quot;How old are you? &quot;)2How old are you? 21 3&gt;&gt;&gt; age &#x3D; int(age)4&gt;&gt;&gt; age &gt;&#x3D; 185True 2.求模运算符（%取余）Code1number &#x3D; input(&quot;Enter a number, and I&#39;ll tell you if it&#39;s even or odd: &quot;)2number &#x3D; int(number)3if number % 2 &#x3D;&#x3D; 0:4 print(&quot;\\nThe number &quot; + str(number) + &quot; is even.&quot;)5else:6 print(&quot;\\nThe number &quot; + str(number) + &quot; is odd.&quot;) 3.while循环 while循环Code1prompt &#x3D; &quot;\\nTell me something, and I will repeat it back to you:&quot;2prompt +&#x3D; &quot;\\nEnter &#39;quit&#39; to end the program. &quot;3message &#x3D; &quot;&quot;4while message !&#x3D; &#39;quit&#39;:5 message &#x3D; input(prompt)6 if message !&#x3D; &#39;quit&#39;:7 print(message) 使用标志（变量）在要求很多条件都满足才继续运行的程序中，可定义一个变量，用于判断整个程序是否处于活动状态。这个变量被称为标志 ，充当了程序的交通信号灯。你可让程序在标志为True 时继续运行，并在任何事件导致标志的值为False 时让程序停止运行。这样，在while 语句中就只需检查一个条件——标志的当前值是否为True ，并将所有测试（是否发生了应将标志设置为False 的事件）都放在其他地方，从而让程序变得更为整洁。 使用break 退出循环要立即退出while 循环，不再运行循环中余下的代码，也不管条件测试的结果如何，可使用break 语句。 在循环中使用continue要返回到循环开头，并根据条件测试结果决定是否继续执行循环，可使用continue 语句，它不像break 语句那样不再执行余下的代码并退出整个循环。Code1current_number &#x3D; 02while current_number &lt; 10: 3 current_number +&#x3D; 14 if current_number % 2 &#x3D;&#x3D; 0:5 continue6 print(current_number) 结果： 1 3 5 7 9 使用while 循环来处理列表和字典pop() 以每次一个的方式从列表unconfirmed_users 末尾删除remove() 来删除列表中的特定值 七、函数1.定义函数 定义函数Code1def greet_user(): 2 &quot;&quot;&quot;显示简单的问候语&quot;&quot;&quot; 3 print(&quot;Hello!&quot;)4greet_user() 2. 实参和形参Code1def greet_user(username):2 &quot;&quot;&quot;显示简单的问候语&quot;&quot;&quot;3 print(&quot;Hello, &quot; + username.title() + &quot;!&quot;)4greet_user(&#39;jesse&#39;) 在函数greet_user() 的定义中，变量username 是一个形参 ——函数完成其工作所需的一项信息。在代码greet_user(‘jesse’) 中，值’jesse’ 是一个实参 。实参是调用函数时传递给函数的信息。 位置实参最简单的关联方式是基于实参的顺序。这种关联方式被称为位置实参 。 关键字实参关键字实参 是传递给函数的名称—值对。你直接在实参中将名称和值关联起来了，因此向函数传递实参时不会混淆（不会得到名为Hamster的harry这样的结果）。关键字实参让你无需考虑函数调用中的实参顺序，还清楚地指出了函数调用中各个值的用途。Code1def describe_pet(animal_type, pet_name):2 &quot;&quot;&quot;显示宠物的信息&quot;&quot;&quot;3 print(&quot;\\nI have a &quot; + animal_type + &quot;.&quot;)4 print(&quot;My &quot; + animal_type + &quot;&#39;s name is &quot; + pet_name.title() + &quot;.&quot;)5describe_pet(animal_type&#x3D;&#39;hamster&#39;, pet_name&#x3D;&#39;harry&#39;)6describe_pet(pet_name&#x3D;&#39;harry&#39;, animal_type&#x3D;&#39;hamster&#39;) 上面最后两行代码，位置颠倒没关系，因为已经用关键字定义了参数。 默认值Code1def describe_pet(pet_name, animal_type&#x3D;&#39;dog&#39;):2 &quot;&quot;&quot;显示宠物的信息&quot;&quot;&quot;3 print(&quot;\\nI have a &quot; + animal_type + &quot;.&quot;)4 print(&quot;My &quot; + animal_type + &quot;&#39;s name is &quot; + pet_name.title() + &quot;.&quot;)5describe_pet(pet_name&#x3D;&#39;willie&#39;) 输出结果：Code1I have a dog.2My dog&#39;s name is Willie. 3.返回值（return）函数并非总是直接显示输出，相反，它可以处理一些数据，并返回一个或一组值。函数返回的值被称为返回值 。在函数中，可使用return 语句将值返回到调用函数的代码行。返回值让你能够将程序的大部分繁重工作移到函数中去完成，从而简化主程序。 让实参变成可选的并非所有的人都有中间名，但如果你调用这个函数时只提供了名和姓，它将不能正确地运行。为让中间名变成可选的，可给实参middle_name 指定一个默认值——空字符串，并在用户没有提供中间名时不使用这个实参。为让get_formatted_name() 在没有提供中间名时依然可行，可给实参middle_name 指定一个默认值——空字符串，并将其移到形参列表的末尾：Code1def get_formatted_name(first_name, last_name, middle_name&#x3D;&#39;&#39;): 返回字典函数可返回任何类型的值，包括列表和字典等较复杂的数据结构。Code1def build_person(first_name, last_name):2 &quot;&quot;&quot;返回一个字典，其中包含有关一个人的信息&quot;&quot;&quot;3 person &#x3D; &#123;&#39;first&#39;: first_name, &#39;last&#39;: last_name&#125;4 return person5musician &#x3D; build_person(&#39;jimi&#39;, &#39;hendrix&#39;) 6print(musician) 返回结果：Code1&#123;&#39;first&#39;: &#39;jimi&#39;, &#39;last&#39;: &#39;hendrix&#39;&#125; 禁止函数修改列表有时候，需要禁止函数修改列表。为解决这个问题，可向函数传递列表的副本而不是原件；这样函数所做的任何修改都只影响副本，而丝毫不影响原件。Code1function_name(list_name[:]) 切片表示法[:] 创建列表的副本。 传递任意数量的实参有时候，你预先不知道函数需要接受多少个实参，好在Python允许函数从调用语句中收集任意数量的实参。Code1def make_pizza(*toppings):2 &quot;&quot;&quot;打印顾客点的所有配料&quot;&quot;&quot;3 print(toppings)4make_pizza(&#39;pepperoni&#39;)5make_pizza(&#39;mushrooms&#39;, &#39;green peppers&#39;, &#39;extra cheese&#39;) 形参名toppings 中的星号让Python创建一个名为toppings 的空元组，并将收到的所有值都封装到这个元组中。函数体内的print 语句通过生成输出来证明Python能够处理使用一个值调用函数的情形，也能处理使用三个值来调用函数的情形。它以类似的方式处理不同的调用，注意，Python将实参封装到一个元组中， *即便函数只收到一个值也如此**：Code1(&#39;pepperoni&#39;,)2(&#39;mushrooms&#39;, &#39;green peppers&#39;, &#39;extra cheese&#39;) 结合使用位置实参和任意数量实参如果要让函数接受不同类型的实参，必须在函数定义中将接纳任意数量实参的形参放在最后。Python先匹配位置实参和关键字实参，再将余下的实参都收集到最后一个形参中。例如，如果前面的函数还需要一个表示比萨尺寸的实参，必须将该形参放在形参*toppings 的前面：Code1def make_pizza(size, *toppings):2 &quot;&quot;&quot;概述要制作的比萨&quot;&quot;&quot;3 print(&quot;\\nMaking a &quot; + str(size) +4 &quot;-inch pizza with the following toppings:&quot;)5 for topping in toppings:6 print(&quot;- &quot; + topping)7make_pizza(16, &#39;pepperoni&#39;)8make_pizza(12, &#39;mushrooms&#39;, &#39;green peppers&#39;, &#39;extra cheese&#39;) 4.将函数存储在模块中 导入整个模块只需编写一条import 语句并在其中指定模块名，就可在程序中使用该模块中的所有函数。如果你使用这种import 语句导入了名为module_name.py 的整个模块，就可使用下面的语法来使用其中任何一个函数： Code1module_name.function_name() 导入特定的函数你还可以导入模块中的特定函数，这种导入方法的语法如下： Code1from module_name import function_name 通过用逗号分隔函数名，可根据需要从模块中导入任意数量的函数： Code1from module_name import function_0, function_1, function_2 使用as 给函数指定别名如果要导入的函数的名称可能与程序中现有的名称冲突，或者函数的名称太长，可指定简短而独一无二的别名 ——函数的另一个名称，类似于外号。要给函数指定这种特殊外号，需要在导入它时这样做。 Code1from pizza import make_pizza as mp2mp(16, &#39;pepperoni&#39;)3mp(12, &#39;mushrooms&#39;, &#39;green peppers&#39;, &#39;extra cheese&#39;) 使用as 给模块指定别名你还可以给模块指定别名。通过给模块指定简短的别名（如给模块pizza 指定别名p ），让你能够更轻松地调用模块中的函数。相比于pizza.make_pizza() ，p.make_pizza() 更为简洁： Code1import pizza as p2p.make_pizza(16, &#39;pepperoni&#39;)3p.make_pizza(12, &#39;mushrooms&#39;, &#39;green peppers&#39;, &#39;extra cheese&#39;) 导入模块中的所有函数使用星号（* ）运算符可让Python导入模块中的所有函数： Code1from pizza import *2make_pizza(16, &#39;pepperoni&#39;)3make_pizza(12, &#39;mushrooms&#39;, &#39;green peppers&#39;, &#39;extra cheese&#39;) import 语句中的星号让Python将模块pizza 中的每个函数都复制到这个程序文件中。由于导入了每个函数，可通过名称来调用每个函数，而无需使用句点表示法。 然而，使用并非自己编写的大型模块时，最好不要采用这种导入方法：如果模块中有函数的名称与你的项目中使用的名称相同，可能导致意想不到的结果：Python可能遇到多个名称相同的函数或变量，进而覆盖函数，而不是分别导入所有的函数。最佳的做法是，要么只导入你需要使用的函数，要么导入整个模块并使用句点表示法。这能让代码更清晰，更容易阅读和理解。这里之所以介绍这种导入方法，只是想让你在阅读别人编写的代码时，如果遇到类似于下面的import 语句，能够理解它们： Code1from module_name import * 函数编写指南(1)编写函数时，需要牢记几个细节。应给函数指定描述性名称，且只在其中使用小写字母和下划线。描述性名称可帮助你和别人明白代码想要做什么。给模块命名时也应遵循上述约定。(2)每个函数都应包含简要地阐述其功能的注释，该注释应紧跟在函数定义后面，并采用文档字符串格式。文档良好的函数让其他程序员只需阅读文档字符串中的描述就能够使用它：他们完全可以相信代码如描述的那样运行；只要知道函数的名称、需要的实参以及返回值的类型，就能在自己的程序中使用它。(3)给形参指定默认值时，等号两边不要有空格，对于函数调用中的关键字实参，也应遵循这种约定。(4)PEP 8（https://www.python.org/dev/peps/pep-0008/ ）建议代码行的长度不要超过79字符，这样只要编辑器窗口适中，就能看到整行代码。如果形参很多，导致函数定义的长度超过了79字符，可在函数定义中输入左括号后按回车键，并在下一行按两次Tab键，从而将形参列表和只缩进一层的函数体区分开来。大多数编辑器都会自动对齐后续参数列表行，使其缩进程度与你给第一个参数列表行指定的缩进程度相同： Code1def function_name(2 parameter_0, parameter_1, parameter_2,3 parameter_3, parameter_4, parameter_5):4 function body... (5)如果程序或模块包含多个函数，可使用两个空行将相邻的函数分开，这样将更容易知道前一个函数在什么地方结束，下一个函数从什么地方开始。(6)所有的import 语句都应放在文件开头，唯一例外的情形是，在文件开头使用了注释来描述整个程序。 八、类1.创建和使用类 根据Dog 类创建的每个实例都将存储名字和年龄。我们赋予了每条小狗蹲下（sit() ）和打滚（roll_over() ）的能力：Code1class Dog(): 2 &quot;&quot;&quot;一次模拟小狗的简单尝试&quot;&quot;&quot;3 def __init__(self, name, age):4 &quot;&quot;&quot;初始化属性name和age&quot;&quot;&quot;5 self.name &#x3D; name6 self.age &#x3D; age7 def sit(self):8 &quot;&quot;&quot;模拟小狗被命令时蹲下&quot;&quot;&quot;9 print(self.name.title() + &quot; is now sitting.&quot;)10 def roll_over(self):11 &quot;&quot;&quot;模拟小狗被命令时打滚&quot;&quot;&quot;12 print(self.name.title() + &quot; rolled over!&quot;) init() 是一个特殊的方法，每当你根据Dog 类创建新实例时，Python都会自动运行它。在这个方法的名称中，开头和末尾各有两个下划线，这是一种约定，旨在避免Python默认方法与普通方法发生名称冲突。形参self 必不可少，还必须位于其他形参的前面。Code1lass Dog():2 --snip--3my_dog &#x3D; Dog(&#39;willie&#39;, 6)4print(&quot;My dog&#39;s name is &quot; + my_dog.name.title() + &quot;.&quot;) 5print(&quot;My dog is &quot; + str(my_dog.age) + &quot; years old.&quot;) 上面实例化了对象，可以直接用句号（.）去调用相关的属性和方法。 2.修改属性的值 1.直接修改属性的值Code1class Car():2 --snip--3my_new_car &#x3D; Car(&#39;audi&#39;, &#39;a4&#39;, 2016)4print(my_new_car.get_descriptive_name())5my_new_car.odometer_reading &#x3D; 236my_new_car.read_odometer() 2.通过方法修改属性的值Code1class Car():2 --snip--3 def update_odometer(self, mileage):4 &quot;&quot;&quot;将里程表读数设置为指定的值&quot;&quot;&quot;5 self.odometer_reading &#x3D; mileage6my_new_car &#x3D; Car(&#39;audi&#39;, &#39;a4&#39;, 2016)7print(my_new_car.get_descriptive_name())8my_new_car.update_odometer(23)9my_new_car.read_odometer() 3.通过方法对属性的值进行递增Code1class Car():2 --snip--3 def update_odometer(self, mileage):4 --snip--5 def increment_odometer(self, miles):6 &quot;&quot;&quot;将里程表读数增加指定的量&quot;&quot;&quot;7 self.odometer_reading +&#x3D; miles 3.继承编写类时，并非总是要从空白开始。如果你要编写的类是另一个现成类的特殊版本，可使用继承 。一个类继承 另一个类时，它将自动获得另一个类的所有属性和方法；原有的类称为父类 ，而新类称为子类 。子类继承了其父类的所有属性和方法，同时还可以定义自己的属性和方法。父类为Car: Code1class Car():2 &quot;&quot;&quot;一次模拟汽车的简单尝试&quot;&quot;&quot;3 def __init__(self, make, model, year):4 self.make &#x3D; make5 self.model &#x3D; model6 self.year &#x3D; year7 self.odometer_reading &#x3D; 08 def get_descriptive_name(self):9 long_name &#x3D; str(self.year) + &#39; &#39; + self.make + &#39; &#39; + self.model10 return long_name.title()11 def read_odometer(self):12 print(&quot;This car has &quot; + str(self.odometer_reading) + &quot; miles on it.&quot;)13 def update_odometer(self, mileage):14 if mileage &gt;&#x3D; self.odometer_reading:15 self.odometer_reading &#x3D; mileage16 else:17 print(&quot;You can&#39;t roll back an odometer!&quot;)18 def increment_odometer(self, miles):19 self.odometer_reading +&#x3D; miles 子类ElectricCar继承父类Car: Code1class ElectricCar(Car):2 &quot;&quot;&quot;电动汽车的独特之处&quot;&quot;&quot;3 def __init__(self, make, model, year):4 &quot;&quot;&quot;初始化父类的属性&quot;&quot;&quot;5 super().__init__(make, model, year)6my_tesla &#x3D; ElectricCar(&#39;tesla&#39;, &#39;model s&#39;, 2016)7print(my_tesla.get_descriptive_name()) Python 2.7中的继承Code1class ElectricCar(Car):2 def __init__(self, make, model, year):3 super(ElectricCar, self).__init__(make, model, year)4 --snip-- 函数super() 需要两个实参：子类名和对象self 。为帮助Python将父类和子类关联起来，这些实参必不可少。另外，在Python 2.7中使用继承时，务必在定义父类时在括号内指定object 。 重写父类方法对于父类的方法，只要它不符合子类模拟的实物的行为，都可对其进行重写。为此，可在子类中定义一个这样的方法，即它与要重写的父类方法同名。这样，Python将不会考虑这个父类方法，而只关注你在子类中定义的相应方法。假设Car 类有一个名为fill_gas_tank() 的方法，它对全电动汽车来说毫无意义，因此你可能想重写它。下面演示了一种重写方式：Code1def ElectricCar(Car):2 --snip--3 def fill_gas_tank():4 &quot;&quot;&quot;电动汽车没有油箱&quot;&quot;&quot;5 print(&quot;This car doesn&#39;t need a gas tank!&quot;) 将实例用作属性使用代码模拟实物时，你可能会发现自己给类添加的细节越来越多：属性和方法清单以及文件都越来越长。在这种情况下，可能需要将类的一部分作为一个独立的类提取出来。你可以将大型类拆分成多个协同工作的小类。例如，不断给ElectricCar 类添加细节时，我们可能会发现其中包含很多专门针对汽车电瓶的属性和方法。在这种情况下，我们可将这些属性和方法提取出来，放到另一个名为Battery 的类中，并将一个Battery 实例用作ElectricCar 类的一个属性：Code1class Car():2--snip--3class Battery():4 &quot;&quot;&quot;一次模拟电动汽车电瓶的简单尝试&quot;&quot;&quot;5 def __init__(self, battery_size&#x3D;70):6 &quot;&quot;&quot;初始化电瓶的属性&quot;&quot;&quot;7 self.battery_size &#x3D; battery_size8 def describe_battery(self):9 &quot;&quot;&quot;打印一条描述电瓶容量的消息&quot;&quot;&quot;10 print(&quot;This car has a &quot; + str(self.battery_size) + &quot;-kWh battery.&quot;)11class ElectricCar(Car):12 &quot;&quot;&quot;电动汽车的独特之处&quot;&quot;&quot;13 def __init__(self, make, model, year):14 &quot;&quot;&quot; 初始化父类的属性，再初始化电动汽车特有的属性15&quot;&quot;&quot;16 super().__init__(make, model, year) 17 self.battery &#x3D; Battery()18my_tesla &#x3D; ElectricCar(&#39;tesla&#39;, &#39;model s&#39;, 2016)19print(my_tesla.get_descriptive_name())20my_tesla.battery.describe_battery() 4.导入类随着你不断地给类添加功能，文件可能变得很长，即便你妥善地使用了继承亦如此。为遵循Python的总体理念，应让文件尽可能整洁。为在这方面提供帮助，Python允许你将类存储在模块中，然后在主程序中导入所需的模块。 导入单个类Code1from car import Car2my_new_car &#x3D; Car(&#39;audi&#39;, &#39;a4&#39;, 2016)3print(my_new_car.get_descriptive_name())4my_new_car.odometer_reading &#x3D; 235my_new_car.read_odometer() 的import 语句让Python打开模块car ，并导入其中的Car 类。这样我们就可以使用Car 类了，就像它是在这个文件中定义的一样。 在一个模块中存储多个类虽然同一个模块中的类之间应存在某种相关性，但可根据需要在一个模块中存储任意数量的类。 从一个模块中导入多个类Code1from car import Car, ElectricCar 从一个模块中导入多个类时，用逗号分隔了各个类。导入必要的类后，就可根据需要创建每个类的任意数量的实例。 导入整个模块你还可以导入整个模块，再使用句点表示法访问需要的类。这种导入方法很简单，代码也易于阅读。由于创建类实例的代码都包含模块名，因此不会与当前文件使用的任何名称发生冲突。Code1import car 导入模块中所有的类（不推荐用）Code1from module_name import * 在一个模块中导入另一个模块有时候，需要将类分散到多个模块中，以免模块太大，或在同一个模块中存储不相关的类。将类存储在多个模块中时，你可能会发现一个模块中的类依赖于另一个模块中的类。在这种情况下，可在前一个模块中导入必要的类。 5.python标准库Python标准库 是一组模块，安装的Python都包含它。你现在对类的工作原理已有大致的了解，可以开始使用其他程序员编写好的模块了。可使用标准库中的任何函数和类，为此只需在程序开头包含一条简单的import 语句。 6.类编码风格 类名应采用驼峰命名法 ，即将类名中的每个单词的首字母都大写，而不使用下划线。实例名和模块名都采用小写格式，并在单词之间加上下划线。 对于每个类，都应紧跟在类定义后面包含一个文档字符串。这种文档字符串简要地描述类的功能，并遵循编写函数的文档字符串时采用的格式约定。每个模块也都应包含一个文档字符串，对其中的类可用于做什么进行描述。 可使用空行来组织代码，但不要滥用。在类中，可使用一个空行来分隔方法；而在模块中，可使用两个空行来分隔类。 需要同时导入标准库中的模块和你编写的模块时，先编写导入标准库模块的import 语句，再添加一个空行，然后编写导入你自己编写的模块的import 语句。在包含多条import 语句的程序中，这种做法让人更容易明白程序使用的各个模块都来自何方。 九、文件和异常1.从文件中读取数据 读取整个文件Code1with open(&#39;pi_digits.txt&#39;) as file_object:2 contents &#x3D; file_object.read()3 print(contents) 文件路径（相对路径）linux、mac用 / ;windows用 (反斜杠) 逐行读取要以每次一行的方式检查文件，可对文件对象使用for 循环：Code1filename &#x3D; &#39;pi_digits.txt&#39;2with open(filename) as file_object: 3 for line in file_object:4 print(line) 创建一个包含文件各行内容的列表使用关键字with 时，open() 返回的文件对象只在with 代码块内可用。如果要在with 代码块外访问文件的内容，可在with 代码块内将文件的各行存储在一个列表中，并在with 代码块外使用该列表：你可以立即处理文件的各个部分，也可推迟到程序后面再处理。Code1filename &#x3D; &#39;pi_digits.txt&#39;2with open(filename) as file_object:3 lines &#x3D; file_object.readlines()4for line in lines:5 print(line.rstrip()) 方法readlines() 从文件中读取每一行，并将其存储在一个列表中 使用文件的内容读取文本文件时，Python将其中的所有文本都解读为字符串。如果你读取的是数字，并要将其作为数值使用，就必须使用函数int() 将其转换为整数，或使用函数float() 将其转换为浮点数。 包含一百万位的大型文件 2.写入文件保存数据的最简单的方式之一是将其写入到文件中。通过将输出写入文件，即便关闭包含程序输出的终端窗口，这些输出也依然存在：你可以在程序结束运行后查看这些输出，可与别人分享输出文件，还可编写程序来将这些输出读取到内存中并进行处理。 写入文件要将文本写入文件，你在调用open() 时需要提供另一个实参，告诉Python你要写入打开的文件。为明白其中的工作原理，我们来将一条简单的消息存储到文件中，而不是将其打印到屏幕上：Code1filename &#x3D; &#39;programming.txt&#39;2with open(filename, &#39;w&#39;) as file_object:3 file_object.write(&quot;I love programming.&quot;) 在这个示例中，调用open() 时提供了两个实参。第一个实参也是要打开的文件的名称；第二个实参（’w’ ）告诉Python，我们要以写入模式 打开这个文件。打开文件时，可指定读取模式 （’r’ ）、写入模式 （’w’ ）、附加模式 （’a’ ）或让你能够读取和写入文件的模式（’r+’ ）。如果你省略了模式实参，Python将以默认的只读模式打开文件。如果你要写入的文件不存在，函数open() 将自动创建它。然而，以写入（’w’ ）模式打开文件时千万要小心，因为如果指定的文件已经存在，Python将在返回文件对象前清空该文件。注意 Python只能将字符串写入文本文件。要将数值数据存储到文本文件中，必须先使用函数str() 将其转换为字符串格式。 写入多行Code1filename &#x3D; &#39;programming.txt&#39;2with open(filename, &#39;w&#39;) as file_object:3 file_object.write(&quot;I love programming.\\n&quot;)4 file_object.write(&quot;I love creating new games.\\n&quot;) 附加到文件如果你要给文件添加内容，而不是覆盖原有的内容，可以附加模式 打开文件。你以附加模式打开文件时，Python不会在返回文件对象前清空文件，而你写入到文件的行都将添加到文件末尾。如果指定的文件不存在，Python将为你创建一个空文件。Code1filename &#x3D; &#39;programming.txt&#39;2with open(filename, &#39;a&#39;) as file_object:3 file_object.write(&quot;I also love finding meaning in large datasets.\\n&quot;)4 file_object.write(&quot;I love creating apps that can run in a browser.\\n&quot;) 3.异常Python使用被称为异常 的特殊对象来管理程序执行期间发生的错误。每当发生让Python不知所措的错误时，它都会创建一个异常对象。如果你编写了处理该异常的代码，程序将继续运行；如果你未对异常进行处理，程序将停止，并显示一个traceback，其中包含有关异常的报告。异常是使用try-except 代码块处理的。try-except 代码块让Python执行指定的操作，同时告诉Python发生异常时怎么办。使用了try-except 代码块时，即便出现异常，程序也将继续运行：显示你编写的友好的错误消息，而不是令用户迷惑的traceback。 处理ZeroDivisionError 异常（除以0引起的异常） 使用个try-except处理异常当你认为可能发生了错误时，可编写一个try-except 代码块来处理可能引发的异常。你让Python尝试运行一些代码，并告诉它如果这些代码引发了指定的异常，该怎么办。处理ZeroDivisionError 异常的try-except 代码块类似于下面这样：Code1try:2 print(5&#x2F;0)3except ZeroDivisionError:4 print(&quot;You can&#39;t divide by zero!&quot;) 使用异常避免崩溃发生错误时，如果程序还有工作没有完成，妥善地处理错误就尤其重要。这种情况经常会出现在要求用户提供输入的程序中；如果程序能够妥善地处理无效输入，就能再提示用户提供有效输入，而不至于崩溃。 else代码块依赖于try 代码块成功执行的代码都应放到else 代码块中：Code1print(&quot;Give me two numbers, and I&#39;ll divide them.&quot;)2print(&quot;Enter &#39;q&#39; to quit.&quot;)3while True:4 first_number &#x3D; input(&quot;\\nFirst number: &quot;)5 if first_number &#x3D;&#x3D; &#39;q&#39;:6 break7 second_number &#x3D; input(&quot;Second number: &quot;)8 try:9 answer &#x3D; int(first_number) &#x2F; int(second_number)10 except ZeroDivisionError:11 print(&quot;You can&#39;t divide by 0!&quot;) 12 else:13 print(answer) try-except-else 代码块的工作原理大致如下：Python尝试执行try 代码块中的代码；只有可能引发异常的代码才需要放在try 语句中。有时候，有一些仅在try 代码块成功执行时才需要运行的代码；这些代码应放在else 代码块中。except 代码块告诉Python，如果它尝试运行try 代码块中的代码时引发了指定的异常，该怎么办。 处理FileNotFoundError 异常使用文件时，一种常见的问题是找不到文件：你要查找的文件可能在其他地方、文件名可能不正确或者这个文件根本就不存在。对于所有这些情形，都可使用try-except 代码块以直观的方式进行处理。Code1filename &#x3D; &#39;alice.txt&#39;2try:3 with open(filename) as f_obj:4 contents &#x3D; f_obj.read()5except FileNotFoundError:6 msg &#x3D; &quot;Sorry, the file &quot; + filename + &quot; does not exist.&quot;7 print(msg) 分析文本尝试计算它包含多少个单词。我们将使用方法split() ，它根据一个字符串创建一个单词列表。方法split() 以空格为分隔符将字符串分拆成多个部分，并将这些部分都存储到一个列表中。结果是一个包含字符串中所有单词的列表，虽然有些单词可能包含标点。 使用多个文件 失败时一声不吭在前一个示例中，我们告诉用户有一个文件找不到。但并非每次捕获到异常时都需要告诉用户，有时候你希望程序在发生异常时一声不吭，就像什么都没有发生一样继续运行。要让程序在失败时一声不吭，可像通常那样编写try 代码块，但在except 代码块中明确地告诉Python什么都不要做。Python有一个pass 语句，可在代码块中使用它来让Python 什么都不要做： 决定报告哪些错误编写得很好且经过详尽测试的代码不容易出现内部错误，如语法或逻辑错误，但只要程序依赖于外部因素，如用户输入、存在指定的文件、有网络链接，就有可能出现异常。凭借经验可判断该在程序的什么地方包含异常处理块，以及出现错误时该向用户提供多少相关的信息。 4.存储数据很多程序都要求用户输入某种信息，如让用户存储游戏首选项或提供要可视化的数据。不管专注的是什么，程序都把用户提供的信息存储在列表和字典等数据结构中。用户关闭程序时，你几乎总是要保存他们提供的信息；一种简单的方式是使用模块json 来存储数据。模块json 让你能够将简单的Python数据结构转储到文件中，并在程序再次运行时加载该文件中的数据。你还可以使用json 在Python程序之间分享数据。更重要的是，JSON数据格式并非Python专用的，这让你能够将以JSON格式存储的数据与使用其他编程语言的人分享。这是一种轻便格式，很有用，也易于学习。 使用json.dump() 和json.load()Code1import json2numbers &#x3D; [2, 3, 5, 7, 11, 13]3filename &#x3D; &#39;numbers.json&#39;4with open(filename, &#39;w&#39;) as f_obj: 5 json.dump(numbers, f_obj) Code1import json2filename &#x3D; &#39;numbers.json&#39; 3with open(filename) as f_obj:4 numbers &#x3D; json.load(f_obj)5print(numbers) 保存和读取用户生成的数据Code1import json2username &#x3D; input(&quot;What is your name? &quot;)3filename &#x3D; &#39;username.json&#39;4with open(filename, &#39;w&#39;) as f_obj: 5 json.dump(username, f_obj) 6 print(&quot;We&#39;ll remember you when you come back, &quot; + username + &quot;!&quot;) 重构你经常会遇到这样的情况：代码能够正确地运行，但可做进一步的改进——将代码划分为一系列完成具体工作的函数。这样的过程被称为重构 。重构让代码更清晰、更易于理解、更容易扩展。 十、测试代码1.测试函数 单元测试和测试用例Python标准库中的模块unittest 提供了代码测试工具。单元测试 用于核实函数的某个方面没有问题；测试用例 是一组单元测试，这些单元测试一起核实函数在各种情形下的行为都符合要求。良好的测试用例考虑到了函数可能收到的各种输入，包含针对所有这些情形的测试。全覆盖式测试用例包含一整套单元测试，涵盖了各种可能的函数使用方式。对于大型项目，要实现全覆盖可能很难。通常，最初只要针对代码的重要行为编写测试即可，等项目被广泛使用时再考虑全覆盖。 可通过的测试创建测试用例的语法需要一段时间才能习惯，但测试用例创建后，再添加针对函数的单元测试就很简单了。要为函数编写测试用例，可先导入模块unittest 以及要测试的函数，再创建一个继承unittest.TestCase 的类，并编写一系列方法对函数行为的不同方面进行测试。Code1import unittest2from name_function import get_formatted_name3class NamesTestCase(unittest.TestCase):4 &quot;&quot;&quot;测试name_function.py&quot;&quot;&quot;5 def test_first_last_name(self):6 &quot;&quot;&quot;能够正确地处理像Janis Joplin这样的姓名吗？&quot;&quot;&quot; 7 formatted_name &#x3D; get_formatted_name(&#39;janis&#39;, &#39;joplin&#39;) 8 self.assertEqual(formatted_name, &#39;Janis Joplin&#39;)9 unittest.main() 我们使用了unittest 类最有用的功能之一：一个断言 方法。断言方法用来核实得到的结果是否与期望的结果一致。在这里，我们知道get_formatted_name() 应返回这样的姓名，即名和姓的首字母为大写，且它们之间有一个空格，因此我们期望formatted_name 的值为Janis Joplin 。为检查是否确实如此，我们调用unittest 的方法assertEqual() ，并向它传递formatted_name 和’Janis Joplin’ 。代码行self.assertEqual(formatted_name, ‘Janis Joplin’) 的意思是说：“将formatted_name 的值同字符串’Janis Joplin’ 进行比较，如果它们相等，就万事大吉，如果它们不相等，跟我说一声！”代码行unittest.main() 让Python运行这个文件中的测试。Code1.2----------------------------------------------------------------------3Ran 1 test in 0.000s4OK 第1行的句点表明有一个测试通过了。接下来的一行指出Python运行了一个测试，消耗的时间不到0.001秒。最后的OK 表明该测试用例中的所有单元测试都通过了。 不能通过的测试 测试未通过怎么办？测试未通过时怎么办呢？如果你检查的条件没错，测试通过了意味着函数的行为是对的，而测试未通过意味着你编写的新代码有错。因此，测试未通过时，不要修改测试，而应修复导致测试不能通过的代码：检查刚对函数所做的修改，找出导致函数行为不符合预期的修改。 添加新测试方法名必须以test_打头，这样它才会在我们运行test_name_function.py时自动运行。这个方法名清楚地指出了它测试的是get_formatted_name() 的哪个行为，这样，如果该测试未通过，我们就会马上知道受影响的是哪种类型的姓名。在TestCase 类中使用很长的方法名是可以的；这些方法的名称必须是描述性的，这才能让你明白测试未通过时的输出；这些方法由Python自动调用，你根本不用编写调用它们的代码。2.测试类 各种断言方法6个常用的断言方法。使用这些方法可核实返回的值等于或不等于预期的值、返回的值为True 或False 、返回的值在列表中或不在列表中。你只能在继承unittest.TestCase 的类中使用这些方法，下面来看看如何在测试类时使用其中的一个。 方法setUp()如果你在TestCase 类中包含了方法setUp() ，Python将先运行它，再运行各个以test_打头的方法。这样，在你编写的每个测试方法中都可使用在方法setUp() 中创建的对象了。","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"python","slug":"python","permalink":"https://xushuhui346.github.io/tags/python/"}]},{"title":"java开发环境搭建","slug":"服务端/java/java开发环境搭建","date":"2019-08-02T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2019/08/02/服务端/java/java开发环境搭建/","link":"","permalink":"https://xushuhui346.github.io/2019/08/02/%E6%9C%8D%E5%8A%A1%E7%AB%AF/java/java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","excerpt":"","text":"简单开发环境1 安装JDK我的路径： 例如 C:\\Program File\\Java\\jdk1.7.0_67\\ 2 配置JDK环境变量（系统变量）JAVA_HOME jdk安装路径 C:\\Program File\\Java\\jdk1.7.0_67PATH %JAVA_HOME%\\binCLASSPATH . 3 验证环境搭建成功命令行 输入java javac java -version 没报错，环境就搭建成功了 集成开发环境1 IDE 集成开发环境常见IDE Eclipse/NetBean/IDEA/MyEclipse等 2 Eclipse 开源的，用java编写的3 集成开发环境的好处 不需要手动编译了（javac） Eclipse默认在保存源文件时编译 默认把class放在bin目录（源码src目录） 不需要手动执行了（java） 右键-run java application即可 代码提示等","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"java","slug":"java","permalink":"https://xushuhui346.github.io/tags/java/"}]},{"title":"java语言介绍","slug":"服务端/java/java语言介绍","date":"2019-08-01T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2019/08/01/服务端/java/java语言介绍/","link":"","permalink":"https://xushuhui346.github.io/2019/08/01/%E6%9C%8D%E5%8A%A1%E7%AB%AF/java/java%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"1 Java的起源Oak –&gt; Java 2 Java的发展Java1.0Java2.0 JavaSE：java平台标准版 JavaME：微型版 JavaEE：企业版sun公司oracle公司 3 Java的特性面向对象可移植性 JVM实现了可移植性健壮性分布式多线程：线程可以理解为轻量的进程。 4 Java的工作方式java源文件（.java格式结尾）—–经过java编译器编译—-字节码（.class格式结尾）——&gt;被类装载器装载到Java虚拟机（JVM）—- 被JVM解释给操作系统—–操作系统来执行。 5 Java开发系统的构成 1.Java虚拟机（JVM）：指令集、寄存器、堆栈、垃圾处理器、方法区域组成。三种区域：局部变量区域、执行环境区域、操作数区域。 2.类库：标准类库（官方提供的，我们可以直接使用类库中的类）、开发者自己的类 3.包：本质上是文件夹的形式，用于组织项目文件。 4.JRE：Java Runtime Environment，java运行环境 5.JDK：Java Development Kit，Java开发套件。 Eclipse 6 Java技术的应用JavaME：目前市场份额很小，ios / androidJavaSE：标准版，用于桌面软件的编程。JavaEE：为企业级开发提供一整套的解决方案。 7 Java跨平台性常见平台 windowsOs Unix Unix-like(linux,Android,ios等) Mac Os跨平台：同一份代码可以在多个平台中运行跨平台原理：每个平台一个配套的虚拟机（JVM）","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"java","slug":"java","permalink":"https://xushuhui346.github.io/tags/java/"}]},{"title":"oo-css","slug":"前端/css/oo-css","date":"2019-07-08T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2019/07/08/前端/css/oo-css/","link":"","permalink":"https://xushuhui346.github.io/2019/07/08/%E5%89%8D%E7%AB%AF/css/oo-css/","excerpt":"","text":"OOCSS 将页面可重用元素抽象成一个类，用class加以描述，而与其对应的HTML即可看成是此类的一个实例。 OOCSS 作用： 1.加强代码复用，以便方便维护。 2.减小css体积。 3.提升渲染效率。 4.组件库思想、栅格布局可共用、减少选择器、方便扩展。 OOCSS注意事项： 1.不要直接定义子节点，应把共性声明放到父类。 2.结构和皮肤相分离。（结构包括position、margin、padding等；皮肤包括color、background、border-radius等） 3.容器和内容相分离。 4.抽象出可重用的元素，建好组件库，在组件库内寻找可用的元素组装页面。 5.往你想要扩展的对象本身增加class而不是他的父节点。 6.对象应保持独立性。 7.避免使用ID选择器，权重太高，无法重用。 8.避免位置相关的样式。 9.保证选择器相同的权重。 10.类名 简短 清晰 语义化 OOCSS的名字并不影响HTML语义化。","categories":[{"name":"前端","slug":"前端","permalink":"https://xushuhui346.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://xushuhui346.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"web","slug":"web","permalink":"https://xushuhui346.github.io/tags/web/"},{"name":"css","slug":"css","permalink":"https://xushuhui346.github.io/tags/css/"}]},{"title":"2019-01-31-周鸿祎自述-我的互联网方法论","slug":"读书笔记/2019-01-31-周鸿祎自述-我的互联网方法论","date":"2019-01-31T00:00:00.000Z","updated":"2020-01-19T03:30:19.264Z","comments":true,"path":"2019/01/31/读书笔记/2019-01-31-周鸿祎自述-我的互联网方法论/","link":"","permalink":"https://xushuhui346.github.io/2019/01/31/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2019-01-31-%E5%91%A8%E9%B8%BF%E7%A5%8E%E8%87%AA%E8%BF%B0-%E6%88%91%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95%E8%AE%BA/","excerpt":"","text":"序言：我的价值观1.创新，敢想敢干2.改变世界3.与众不同第一章、互联网时代1.没人能打败趋势2.要做黑天鹅，不做火鸡3.互联网思维4.营销要在一个点上突破，让用户觉得很棒5.产品体验6.商业模式不是赚钱模式商业模式的基础是用户。 产品模式、用户模式、推广模式、收入模式 第二章、互联网里的用户至上1.是用户，而不是客户2.互联网产品的本质是为用户服务，用户决定一切 第三章、颠覆式创新1.颠覆式创新是人性的表达2.颠覆式创新是屌丝的逆袭3.任何颠覆式创新都是从细节入手，从不起眼的地方出发4.颠覆式创新，需要逆向思维5.技术只是手段，用户体验才是目的6.《创新者的窘境》《柔道战略》《定位》 第四章、免费时代1.免费是一种商业模式2.互联网化：商业模式互联网化、产品体验互联网化、市场推广互联网化、产品销售互联网化 第五章、体验为王1.超出预期的才叫用户体验2.体验的基础是用户需求3.细节4.一定要聚焦5.大道至简 第六章、互联网方法论1.微创新：一切从用户出发的创新2.小处着眼3.小步快跑4.不要平台化思维5.口碑是衡量创新的标准6.创新需要土壤7.容忍失败8.硅谷创业者：与众不同的精神、产品经理精神、颠覆精神9.think different10.战略必须落地到产品11.像小白一样思考12.做产品要有一颗粗糙的心：做产品要在某些点上做到极致，但不是完美，完美是不可能的。 附录：周鸿纬批注“遗失的乔布斯访谈”1.会制造噪声的团队，才会磨出美丽的石头2.不羞于窃取伟大的想法，但要有自己的与众不同3.创业不是为了钱，成就感，改变世界 读书随感：周鸿祎，互联网时代的搅局者，之前对他的了解就是360和3Q大战，觉得他有一股折腾的劲儿，可能和他的同行不一样，我对他还是有些好感的，这次看了周的自传，感觉更深入的了解了他和360的企业文化，我俩之间有很多相似之处，都想像乔布斯一样，能做出一些改变世界的事。周多次说了用户体验和免费模式，在互联网和移动互联网的时代，我很认同这两点的重要性，一个产品要有了用户基础，才能不断进步；免费模式是互联网时代的特征，只有免费，才能降低用户的使用门槛，让更多的人了解你的产品，给你的产品提出更多的问题，才能让你改进更快。虽然整本书都是在产品角度去讲解和分析，但很多东西在其他的领域也是可以借鉴的，做人做事都要有自己的个性和追求极致的精神，都要体现自己的存在和价值，这样，活一辈子才不枉！！！","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"https://xushuhui346.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"读书","slug":"读书","permalink":"https://xushuhui346.github.io/tags/%E8%AF%BB%E4%B9%A6/"},{"name":"笔记","slug":"笔记","permalink":"https://xushuhui346.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"方法论","slug":"方法论","permalink":"https://xushuhui346.github.io/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"}]},{"title":"winscp链接远程centos服务器：拒绝访问","slug":"服务端/运维/winscp链接远程centos服务器：拒绝访问","date":"2018-03-08T00:00:00.000Z","updated":"2020-01-19T03:30:19.264Z","comments":true,"path":"2018/03/08/服务端/运维/winscp链接远程centos服务器：拒绝访问/","link":"","permalink":"https://xushuhui346.github.io/2018/03/08/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/winscp%E9%93%BE%E6%8E%A5%E8%BF%9C%E7%A8%8Bcentos%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9A%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE/","excerpt":"","text":"查了很多资料，最后这个方式解决了，sudo重置root账户的密码 Code1sudo passwd root &#x2F;&#x2F;用sudo修改root帐户 Password: //输入密码Enter new UNIX password: //提示输入新的root帐户密码Retype new UNIX password: //再输入一次确认密码 修改成功之后你就可以使用root账号了 有时直接用root账号还是无法登陆远程终端，这时还需要修改ssh配置文件： /etc/ssh/sshd_config 修改该配置文件： Code1# Authentication:2LoginGraceTime 1203PermitRootLogin without-password4StrictModes yes 将 PermitRootLogin without-password 修改为 PermitRootLogin yes，如下： Code1# Authentication:2LoginGraceTime 1203PermitRootLogin yes4StrictModes yes 可以成功登陆了。","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"},{"name":"centos","slug":"centos","permalink":"https://xushuhui346.github.io/tags/centos/"},{"name":"winscp","slug":"winscp","permalink":"https://xushuhui346.github.io/tags/winscp/"}]},{"title":"windows系统下免密登录linux服务器","slug":"服务端/运维/windows系统下免密登录linux服务器","date":"2018-02-18T00:00:00.000Z","updated":"2020-01-19T03:30:19.264Z","comments":true,"path":"2018/02/18/服务端/运维/windows系统下免密登录linux服务器/","link":"","permalink":"https://xushuhui346.github.io/2018/02/18/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/windows%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95linux%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"","text":"首先声明，本文是在借鉴其他文章，并实践成功后编写的，在文中会有相关引用的链接。大家也可以参考相关文章Windows 下通过 cmder 远程连接 Linux 服务器 （注：此文章中有代码在实际操作时有问题，导致报错，笔者会在下文中描述）。 一、文章操作指引 需要先在 Windows 系统中安装 cmder（点击蓝色字符下载安装），并通过 Tools - Windows系统下的命令行工具Cmder这篇文章对cmder进行配置。 文中用 ““ 表示的字符需要替换为自己机器中真实的名称 以 “$ “ 开头的命令代表需要在命令行工具中输入，输入时不需要带上 “$ “ 字符。 二、前言SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。 SSH 目前提供两种级别的安全验证 基于口令的安全验证 基于秘钥的安全认证（不需要在网络上传输口令，相对来说更加安全） 三、开始操作吧1.引子：首先，我们先用账号密码的方式登录服务器通过 SSH 口令方式连接： 打开 cmder 输入以下命令按回车确认Code1$ ssh &lt;用户名&gt;@&lt;服务器ip地址&gt; 根据给出的提示输入用户密码，按回车确认 登录成功 2.接下来进入正题：通过 SSH 密钥方式连接（实现免密登录）请先检查本机目录 C:\\Users&lt;用户名&gt;.ssh 下是否有 id_rsa 和 id_rsa.pub 两个文件，如果有直接上传公钥 id_rsa.pub 到 Linux 服务器（步骤2）即可，无需再生成密钥对 步骤1 、在本机生成 SSH 密钥对(1)打开 cmder(2)输入以下命令按回车确认Code1$ ssh-keygen -t rsa (3)弹出密钥保存位置提示后，继续按回车（密钥对将生成到默认位置 C:\\Users&lt;用户名&gt;.ssh\\）(4)弹出输入密码提示后，继续按回车（此时不设置密钥对验证密码）(5)弹出确认密码提示后，继续按回车(6)检查本机目录 C:\\Users&lt;用户名&gt;.ssh\\ 下存在 id_rsa 和 id_rsa.pub 两个文件(7)密钥对生成完毕 步骤2、上传公钥到 Linux 服务器(1)通过方式一连接到 Linux 服务器(2)在远程服务器上输入以下命令Code1$ mkdir ~&#x2F;.ssh &amp;&amp; touch ~&#x2F;.ssh&#x2F;authorized_keys2$ chmod 700 ~&#x2F;.ssh &amp;&amp; chmod 600 ~&#x2F;.ssh&#x2F;authorized_keys (3)在本机输入命令Code1$ scp C:&#x2F;Users&#x2F;&lt;用户名&gt;&#x2F;.ssh&#x2F;id_rsa.pub &lt;用户名&gt;@&lt;服务器ip地址&gt;:~&#x2F;.ssh&#x2F;authorized_keys 或者Code1$ scp ~&#x2F;.ssh&#x2F;id_rsa.pub &lt;用户名&gt;@&lt;服务器ip地址&gt;:~&#x2F;.ssh&#x2F;authorized_keys 注：上面说的操作报错，就是这里，参考的文章中ssh公钥的目录用的\\，导致一直报错找不到文件，网上查了半天，没有合理的解释，用/就没有问题了。windows系统默认的\\。。。(4)输入密码后，按回车确认(5)上传成功后输入以下命令即可成功连接服务器Code1$ ssh &lt;用户名&gt;@&lt;服务器ip地址&gt; (6)配置 config 文件简化登录输入Code1$ vim C:\\Users\\&lt;用户名&gt;\\.ssh\\config 输入以下内容：Code1Host &lt;自定义服务名称&gt;2 HostName &lt;服务器ip地址&gt;3 User &lt;用户名&gt;4 PubkeyAuthentication yes config 文件创建好后，直接输入以下命令登录服务器Code1$ ssh &lt;自定义服务名称&gt; 好了，大功告成。注：记得没有&lt;&gt;哦！！！","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"},{"name":"linux","slug":"linux","permalink":"https://xushuhui346.github.io/tags/linux/"},{"name":"免密登录","slug":"免密登录","permalink":"https://xushuhui346.github.io/tags/%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/"}]},{"title":"Nginx的反向代理与负载均衡","slug":"服务端/运维/Nginx的反向代理与负载均衡","date":"2018-02-17T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2018/02/17/服务端/运维/Nginx的反向代理与负载均衡/","link":"","permalink":"https://xushuhui346.github.io/2018/02/17/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Nginx%E7%9A%84%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","excerpt":"","text":"什么是反向代理与负载均衡 正向代理： 明确知道要访问的是哪个网站、服务器 反向代理： 不明确是访问的哪个服务器 负载均衡： 挑压力小的服务器返回数据，分担了负载压力。 Nginx负载均衡的实现 Nginx利用反向代理实现负载均衡 Http Upstream模块：实现 ip_hash指令：保证用户再次访问还是落地之前的服务器上 server指令：权重 其他负载均衡的方法部署NodeJs上线步骤 PM2动态监测文件 能够动态的监控文件的上传 0秒热启动 能够负载均衡 cpu 内存使用过多 cpu调度太频繁 重启 restart 个数 （重启次数）","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"},{"name":"nginx","slug":"nginx","permalink":"https://xushuhui346.github.io/tags/nginx/"},{"name":"负载均衡","slug":"负载均衡","permalink":"https://xushuhui346.github.io/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"}]},{"title":"Linux基础命令","slug":"服务端/运维/Linux基础命令","date":"2018-02-15T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2018/02/15/服务端/运维/Linux基础命令/","link":"","permalink":"https://xushuhui346.github.io/2018/02/15/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/","excerpt":"","text":"linux命令 cd / 进入根目录 cd ` 进入用户目录 pwd 获得详细目录信息 ls -al 查看当前目录所有文件结构（a显示隐藏文件 l显示长列表格式） mkdir 创建目录 touch 创建文件 vi 文件名 进入文件 查看文件 vi进入文件后 输入i 进入编辑模式 ， esc 退出编辑， :wq保存退出文件。 cat 文件名 预览文件内容 rmdir 或rm -r 删除文件夹 rm 删除文件 rm -rf * 删除所有的文件 cp 被复制的文件 目录/复制后的文件名 cp -R 被复制的目录 复制后的目录 find / -name nginx.conf 在根目录下查找名字为nginx.conf的文件","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"},{"name":"linux","slug":"linux","permalink":"https://xushuhui346.github.io/tags/linux/"}]},{"title":"http协议","slug":"服务端/运维/http协议","date":"2018-02-12T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2018/02/12/服务端/运维/http协议/","link":"","permalink":"https://xushuhui346.github.io/2018/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/http%E5%8D%8F%E8%AE%AE/","excerpt":"","text":"http请求模型 浏览器行为与http协议 1.输入网址并回车 2.解析域名(dns解析为ip，一个ip地址有多个服务器，反向代理) 3.浏览器发送http请求 4.服务器处理请求 5.服务器返回html响应 6.浏览器处理html页面 7.继续请求其他资源 什么是http协议 了解tcp/ip协议栈 1.应用层为用户提供所需要的各种服务，例如：http、ftp、dns、smtp(邮件协议)、pop3(邮件)等https加密放在会话层 2.传输层为应用层实现提供端到端的通信功能，保证数据包的顺序传送及数据的完整性。tcp 传输控制协议udp 用户数据报协议 3.网络层主要解决主机到主机的通信问题。ip协议是网际互联层最重要的协议。 4.网络接口层负责监视数据在主机和网络之间的交换。 http的工作过程一次http请求操作称为一个事务；事务有两个特点：1.按顺序执行；2.某一步失败都会导致整个过程失败。 请求与响应 http请求组成：请求行、消息报头、请求正文 http响应组成：状态行、消息报头、响应正文 get post 区别： 1.get 只包含消息报头；post包含消息报头和请求正文2.get请求的信息在URI上，浏览器能看到；post请求的信息在请求体里，浏览器看不到3.get请求传输的信息大小在4k左右；post没有大小限制，只要服务器支持4.get请求只能提交文本；post可以提交文本，也可以提交二进制数据","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"http","slug":"http","permalink":"https://xushuhui346.github.io/tags/http/"},{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"}]},{"title":"linux服务器配置全局命令","slug":"服务端/运维/linux服务器配置全局命令","date":"2018-02-11T00:00:00.000Z","updated":"2020-01-19T03:30:19.264Z","comments":true,"path":"2018/02/11/服务端/运维/linux服务器配置全局命令/","link":"","permalink":"https://xushuhui346.github.io/2018/02/11/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80%E5%91%BD%E4%BB%A4/","excerpt":"","text":"一、原因因为我们要在linux服务器使用一些全局命令，比如npm,cnpm,node等等，所以在配置全局命令的时候遇到了一些障碍，主要还是对linux操作不熟悉。 二、开始操作 首先，我们在linux系统安装了某个命令，不会像一些windows安装软件似的直接给配置好了全局命令，所以，我们需要手动进行配置。linux服务器的全局命令配置的目录是在Code1&#x2F;usr&#x2F;local&#x2F;bin 然后我们需要找到我们之前将文件安装到哪里了，比如我安装了cnpmCode1npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org 但是我不知道真正装到哪里了我们可以使用命令Code1find &#x2F; -name &#39;cnpm&#39; 命令的含义是在 /根目录下 查找名字为 ‘cnpm’的文件其中，在bin目录下的就是我们想要的文件地址（这里我用的是Code1&#x2F;app&#x2F;nodejs&#x2F;lib&#x2F;node_modules&#x2F;cnpm&#x2F;bin&#x2F;cnpm 不知道直接选Code1&#x2F;app&#x2F;nodejs&#x2F;bin&#x2F;cnpm 能不能行，下次试试） 接下来我们就可以配置全局了，这里用的是软链接Code1ln -s &#x2F;app&#x2F;nodejs&#x2F;lib&#x2F;node_modules&#x2F;cnpm&#x2F;bin&#x2F;cnpm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;cnpm 最后我们可以去 /usr/local/bin目录下看一看目录中已经有cnpm文件了。 三、验证结果再查看下cnpm是否全局安装成功ok，大功告成，这样就可以在linux服务器开心的用cnpm了。其他文件的配置也是一样的，这里只是拿cnpm举例而已，如果有不同的地方，大家可以留言告知，一起学习。","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"},{"name":"linux","slug":"linux","permalink":"https://xushuhui346.github.io/tags/linux/"}]},{"title":"centos7官方推荐安装node方法","slug":"服务端/运维/centos7官方推荐安装node方法","date":"2018-02-10T00:00:00.000Z","updated":"2020-01-19T03:30:19.248Z","comments":true,"path":"2018/02/10/服务端/运维/centos7官方推荐安装node方法/","link":"","permalink":"https://xushuhui346.github.io/2018/02/10/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/centos7%E5%AE%98%E6%96%B9%E6%8E%A8%E8%8D%90%E5%AE%89%E8%A3%85node%E6%96%B9%E6%B3%95/","excerpt":"","text":"网上查看centos上安装node的方法，就这种最简单，而且默认全局安装，不用软连接了。 Code1curl --silent --location https:&#x2F;&#x2F;rpm.nodesource.com&#x2F;setup_8.x | sudo bash - Code1yum -y install nodejs Code1sudo yum install gcc-c++ make","categories":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"}],"tags":[{"name":"服务端","slug":"服务端","permalink":"https://xushuhui346.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"},{"name":"运维","slug":"运维","permalink":"https://xushuhui346.github.io/tags/%E8%BF%90%E7%BB%B4/"},{"name":"centos","slug":"centos","permalink":"https://xushuhui346.github.io/tags/centos/"},{"name":"node","slug":"node","permalink":"https://xushuhui346.github.io/tags/node/"}]},{"title":"大前端","slug":"前端/大前端","date":"2018-01-31T00:00:00.000Z","updated":"2020-01-19T03:30:19.212Z","comments":true,"path":"2018/01/31/前端/大前端/","link":"","permalink":"https://xushuhui346.github.io/2018/01/31/%E5%89%8D%E7%AB%AF/%E5%A4%A7%E5%89%8D%E7%AB%AF/","excerpt":"","text":"基础1.html2.css3.es5+5.14.jquery技术内幕5.linux6.php+mySql —-yii框架7.es6 一、js语言新发展1.深度实践js语言精粹es6在企业中的应用typescript前世今生 2.js函数式编程3.js与qa测试 二、大话nodejs1.nodejs基础基础apiexpresskoanode实战 2.深度实践nginx反向代理与负载均衡nodejs线上部署腾讯地图h5 nodejs架构搭建nodejs源码javawebNET用框架核心思想前后端分离与用户验证[实战]Hapi[实战]egg 3.http协议4.大规模nodejs项目架构与优化 三、前端工程化1.常用前端构建工具webpackrollupgulpgruntboweryeomanbrowserifyparcelfis 2.深度实践前端架构那些事儿webpack从入门到放弃前端工程化预备知识fis从入门到放弃 3.前端工程化linux预备知识4.前端项目持续集成 四、性能优化与工程化1.性能优化常用技术手段雅虎军规面向切面编程nginx服务器缓存策略 2.前端高级调试断点及捕捉事件绑定Audits和Chrome性能插件Timeline掌控帧渲染模式Profiles分析具体问题 3.深入实践网红平台性能优化性能优化黑科技 Google AMPWeb高性能动画及渲染原理 4.性能优化必备服务器知识5.前端架构与性能优化 五、css与网站重构1.less&amp;Sass入门2.css3其他核心技巧oocsscss绘制特殊图形css绘制3d魔方圣杯布局双飞翼布局 3.深度实践css常用技巧css分层理论 4.Css Workflow5.Css与数学奥秘6.前端架构师实战17.前端架构师实战2 六、MVC MVVM框架1.基础typescript入门AngularJs入门react入门vue入门 2.深入vue深入react深入 3.进阶vue源码react深度指南前端架构师实战3前端架构师实战4","categories":[{"name":"前端","slug":"前端","permalink":"https://xushuhui346.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://xushuhui346.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"大前端","slug":"大前端","permalink":"https://xushuhui346.github.io/tags/%E5%A4%A7%E5%89%8D%E7%AB%AF/"},{"name":"目录","slug":"目录","permalink":"https://xushuhui346.github.io/tags/%E7%9B%AE%E5%BD%95/"}]}]}